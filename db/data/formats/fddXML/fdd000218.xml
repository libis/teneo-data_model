<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000218" titleName="MPEG-4, Advanced Video Coding, High 4:4:4 Profile" shortName="MPEG-4_AVC_H444P" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-2.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>moving-image</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>encoding</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:gdfrBasis>sampled</fdd:gdfrBasis>
		<fdd:updates>
			<fdd:date>2011-12-27</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Full</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>Information technology -- Coding of audio-visual objects (formal name); MPEG-4, Advanced Video Coding (part 10), High 4:4:4 Profile</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>FRExt, Fidelity Range Extensions</fdd:keyword>
			<fdd:keyword>MPEG-4</fdd:keyword>
			<fdd:keyword>MPEG</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>The High 4:4:4 Profile <fddLink id="fdd000081">MPEG-4_AVC</fddLink> (from ITU-T H.264) supports 4:4:4 chroma at 12 bits per channel, adaptive macroblock-level switching between 8x8 and 4x4 transform block size, encoder-specified quantization scaling matrices, encoder-specified separate control of the quantization parameter for each chroma component, and monochrome sequences.  It also supports residual color transform and predictive lossless coding (see <a href="#notes">Notes</a> regarding lossless-ness).  The <a href="https://www.fastvdo.com/spie04/spie04-h264OverviewPaper.pdf">Overview and Introduction to the Fidelity Range Extensions</a> does not separately discuss the High 4:4:4 Profile but states that "High 4:2:2 is expected to be used frequently in studio environments."</p>
			<p>NOTE: this Web page drafted prior to the amendment of the standard to add the four High profiles.<a href="../contact_format.shtml">Comments welcome</a>. </p>
		</fdd:description>
		<fdd:shortDescription>The High 4:4:4 Profile supports 4:4:4 chroma at 12 bits per channel, adaptive macroblock-level switching between 8x8 and 4x4 transform block size, encoder-specified quantization scaling matrices, encoder-specified separate control of the quantization parameter for each chroma component, and monochrome sequences.  It also supports residual color transform and predictive lossless coding.</fdd:shortDescription>
		<fdd:productionPhase>Generally a final-state (end-user delivery) format.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Subtype of</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000081</fdd:id>
					<fdd:shortName>MPEG-4_AVC</fdd:shortName>
					<fdd:titleName>MPEG-4, Advanced Video Coding (Part 10) (H.264)</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Used by</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000224</fdd:id>
					<fdd:shortName>MP4_FF_2_AVC_H444P</fdd:shortName>
					<fdd:titleName>MPEG-4 File Format, V.2, with AVC, High 4:4:4 Profile</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>Open standard. See <fddLink id="fdd000081">MPEG-4_AVC</fddLink>.
		</fdd:disclosure>
		<fdd:documentation>See <fddLink id="fdd000081">MPEG-4_AVC</fddLink>. This profile is not yet in the formal specification; information may be found in <a href="https://www.fastvdo.com/spie04/spie04-h264OverviewPaper.pdf">Overview and Introduction to the Fidelity Range Extensions</a>.
		</fdd:documentation>
		<fdd:adoption>See <fddLink id="fdd000215">MPEG-4_AVC_HP</fddLink> and <fddLink id="fdd000081">MPEG-4_AVC</fddLink>.
		</fdd:adoption>
		<fdd:licensingAndPatents>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.
		</fdd:licensingAndPatents>
		<fdd:transparency>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.
		</fdd:transparency>
		<fdd:selfDocumentation>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.
		</fdd:selfDocumentation>
		<fdd:externalDependencies>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.
		</fdd:externalDependencies>
		<fdd:techProtection>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.
		</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:movingImageQF>
			<fdd:normalVideo>Good support.</fdd:normalVideo>
			<fdd:clarity>See <fddLink id="fdd000081">MPEG-4_AVC</fddLink>. Depends in part on the level and encoding algorithm selected. The High 4:4:4 Profile has the potential to produce greater clarity than <fddLink id="fdd000082">MPEG-4_AVC_BP</fddLink>, <fddLink id="fdd000083">MPEG-4_AVC_MP</fddLink>, <fddLink id="fdd000084">MPEG-4_AVC_EP</fddLink>, <fddLink id="fdd000215">MPEG-4_AVC_HP</fddLink>, <fddLink id="fdd000216">MPEG-4_AVC_H10P</fddLink>, and <fddLink id="fdd000217">MPEG-4_AVC_H422P</fddLink>. The greatest clarity will result from lossless coding; see <a href="#notes">Notes</a>, below.</fdd:clarity>
			<fdd:beyondVideo>See <fddLink id="fdd000155">MP4_FF_2</fddLink>.</fdd:beyondVideo>
		</fdd:movingImageQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValueNA>Not applicable.</fdd:sigValueNA>
				<fdd:note>Pertains to the file format; see <a href="fdd000155.shtml">MP4_FF_2</a>
				</fdd:note>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValueNA>Not applicable.</fdd:sigValueNA>
				<fdd:note>Pertains to the file format; see <a href="fdd000155.shtml">MP4_FF_2</a>
				</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValueNA>Not applicable.</fdd:sigValueNA>
				<fdd:note>Pertains to the file format; see <a href="fdd000155.shtml">MP4_FF_2</a>
				</fdd:note>
			</fdd:magicNumbers>
			<fdd:other>
				<fdd:tag>File type brand (ISO Base Media File Format)</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>Indicated in file wrapper and relates to "brands" defined in <a href="fdd000079.shtml">ISO_BMFF</a>.  Wrapping MPEG-4_AVC bitstreams in <fddLink id="fdd000037">MP4_FF_1</fddLink> (unlikely) would occasion the use of <i>mp41</i>; in <fddLink id="fdd000155">MP4_FF_2</fddLink> (more likely), use <i>mp42</i>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Indicator for profile, level, version, etc.</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>244</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>
						<i>profile_idc</i>; described as a part of Annex A of <a href="#specs">Part 10</a> of the standard, pp. 204-05.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Pronom PUID</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>PRONOM has no corresponding entry as of July 2022.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See related format.</fdd:sigValueNA>
					<fdd:note>See <fddLink id="fdd000081">MPEG-4, Advanced Video Coding (Part 10) (H.264)</fddLink>.
					</fdd:note>
				</fdd:values>
			</fdd:other>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>How lossless might the High 4:4:4 profile be? Detlev Marpe and Thomas Weigand's article <a href="http://ip.hhi.de/imagecom_G1/assets/pdfs/ICIP05_H264_Fidelity.pdf">H.264/MPEG4-AVC Fidelity Range Extensions: Tools, Profiles, Performance, and Application Areas</a> reports that important tools contained within the FRExt amendment include the following pair, which seem to have to do with lossless coding: (1) "A residual color transform consisting in a reversible integer-based color conversion from (4:4:4) RGB to the YCgCo color space applied to residual data only," and (2) "A lossless coding capability requiring only a relatively simple bypass of transform and quantization."  A similar statement is made in Jens-Rainer Ohm and Gary Sullivan's "<a href="http://mpeg.chiariglione.org/">Introduction to MPEG-4 Advanced Video Coding</a>,"which describes the High 4:4:4 as "supporting a residual color transform in the decoding process, and defining a transform bypass mode which allows efficient lossless coding." </p>
			<p>Ian Gilmour, a preservation officer with the National Screen and Sound Archive of Australia, offers this commentary:</p>
			<p>"The lossless bits? The short answer on MPEG-4 is that you can have compressed video which will be lossy, or, under certain very narrow constraints, you can retain discrete parts of the picture area, but with no compression. You cannot losslessly encode a normal, real-life video stream using MPEG-4 to achieve any significant data reduction.&quot;</p>
			<p>"There are two specific tools amongst the hundreds in the entire MPEG-4 kit that refer to lossless compression: (1) intra PCM raw sample-value macroblocks, and (2) entropy-coded transform-bypass lossless macroblocks (FRExt-only).  These are designed to be applied to macroblocks, and to slices. As far as I've been able to ascertain, they would not apply at the partition level, and they would not be used in interframe modes. They essentially have complementary or in fact diametrically opposing roles. One way to compare them is to 'picture' the kinds of content on which they may be used.&quot;</p>
			<p>"<i>Intra PCM</i>.  The first routine, I-PCM, appears to be applicable to most profiles and levels, and is not constrained to 4:4:4 only. It would be useful, presumably, if every pixel within a macroblock had widely differing values, or highly randomised sets of values for luminance and chroma. In such instances the possible gains of using sufficiently complex transforms to accurately characterise all possible types of picture content in order to reduce entropy to virtually non-existent levels, would be far outweighed by the overheads of simply passing through the original pixel values. In other words, these macroblocks or slices would be uncompressed, and no savings in data or file size would be achieved (in fact, a slight coding overhead is added). What I read between the lines is "don't get too excited about having tiny parts of an image uncompressed, when you're only starting with 4:2:0 in the first place". If you think this through a bit more carefully, it could mean, in addition, that if a given bit stream was constrained to a certain data rate, and even a small number of macroblocks in an I frame were set to I-PCM, there would be less data space available to encode the rest of the frame, leading to a more lossy outcome for the other macroblocks. It will be interesting to see how such rules and trade-offs are actually programmed into real-world encoders when they come on-line.&quot;</p>
			<p>"<i>Transform-bypass</i>.  This second mode would probably work best on exactly the opposite kind of image content. Let's say you had a frame of colour bars, and they all had boundaries or hard transitions from one colour to the next which exactly coincided with 16x16 macroblock boundaries. (I'm not sure how you'd do this in 720 x 480 with eight bars unless you had something like extra red space around the edges). It would be possible in this mode, theoretically, to process each macroblock straight through to the entropy coder, and to reconstruct the same sample values at the other end, since no DC transformation or inverse transform would be needed. This functionality has been available for at 20 years, with LZW, and even a .gif file would achieve the same effect; you wouldn't need an MPEG-4 CODEC if pictures were all that simple. The only catch is that real-world television has all this other stuff after the colour-bars, and it's not all neatly arranged into 16 x 16 squares, and the colours and luminance vary all over the shop, and . . . .</p>
			<p>"Let's also look at the practical ramifications of tools which only apply to 4:4:4 colour space. Film archives would only get 4:4:4 or RGB data from scanning film at high resolution on a 2k or 4k scanner such as Cintel, Dalsa, Imagica, Kinton, Northlight, Thompson, etc. What this means is that the more advanced Fidelity Range Extensions would only be useful on film scans or possibly other true-colour material such as CG. They would not be deployable on our tens/hundreds of thousands of PAL/NTSC videos which are the real preservation reformatting challenge right now. You would need the FRExt functionality to encode 4:2:2, from a good analog composite to digital component encoder, although it would still be lossy MPEG-4. The lower modes and profiles, including 8-bit 4:2:0 would not really be much use, because in common broadcast space, these levels are already compressed in MPEG-2 (Beta SX and IMX) or DV family DCT compression. For comparison, Motion JPEG 2000 is the only application designed for lossless end-to-end compression of standard definition 4:2:2 component video from older VTRs."  (Personal communication, October 7, 2005)</p>
			<p>
				<a href="../contact_format.shtml">Comments welcome</a>.</p>
		</fdd:general>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:citations>
			<fdd:citation>
				<fdd:specReference>ISO/IEC 14496-10:2003   Information technology -- Coding of audio-visual objects -- Part 10: Advanced Video Coding</fdd:specReference>
			</fdd:citation>
			<fdd:citation>
				<fdd:specReference>ISO/IEC 14496-15:2003   Information technology -- Coding of audio-visual objects -- Part 15: Advanced Video Coding (AVC) file format</fdd:specReference>
			</fdd:citation>
		</fdd:citations>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.fastvdo.com/spie04/spie04-h264OverviewPaper.pdf</link>
					<tag>Overview and Introduction to the Fidelity Range Extensions</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://ip.hhi.de/imagecom_G1/assets/pdfs/ICIP05_H264_Fidelity.pdf</link>
					<tag>H.264/MPEG4-AVC Fidelity Range Extensions: Tools, Profiles, Performance, and Application Areas</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://mpeg.chiariglione.org/</link>
					<tag>Introduction to MPEG-4 Advanced Video Coding</tag>
					<comment>by Jens-Rainer Ohm and Gary Sullivan </comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
		<fdd:citations>
			<fdd:citation>
				<fdd:bookReference> Sullivan, Gary J., Pankaj Topiwala, and Ajay Luthra. "Overview and Introduction to the Fidelity Range Extensions."  Paper presented at the SPIE Conference on Applications of Digital Image Processing XXVII, Special Session on Advances in the New Emerging Standard: H.264/AVC, August, 2004.</fdd:bookReference>
			</fdd:citation>
		</fdd:citations>
	</fdd:usefulReferences>
</fdd:FDD>
