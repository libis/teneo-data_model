<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000512" titleName="Microsoft Excel Binary (XLSB) Format (option in Excel 2007 and later)" shortName="MS-XLSB" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-2.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenreAndSubgenres>
				<fdd:gdfrGenre>spreadsheet</fdd:gdfrGenre>
				<fdd:gdfrSubgenres>
					<fdd:gdfrSubgenre>dataset</fdd:gdfrSubgenre>
				</fdd:gdfrSubgenres>
			</fdd:gdfrGenreAndSubgenres>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>
		<fdd:gdfrDomains>
			<fdd:gdfrDomain>
				<fdd:value>office/business</fdd:value>
			</fdd:gdfrDomain>
		</fdd:gdfrDomains>
		<fdd:updates>
			<fdd:date>2024-05-09</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Full</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>Microsoft Excel Binary (XLSB) File Format (option in Excel 2007 and later )</fdd:fullName>
		<fdd:description>
			<p>The Microsoft Excel Binary File format, with the .xlsb extension and referred to here as XLSB, was introduced in Microsoft Office 2007, at the same time as the XML-based formats of the Office Open XML  (<fddLink id="fdd000395">OOXML</fddLink>) family. Unlike that family of formats, XLSB is not an international standard.  It is a proprietary Microsoft format for spreadsheets that has been available as a full-fidelity alternative to the default <fddLink id="fdd000398">XLSX</fddLink> format since Excel 2007.  It is intended for users who need to load and save large data files as fast as possible.  Although proprietary, it is covered by Microsoft&apos;s <a href="https://docs.microsoft.com/en-us/openspecs/dev_center/ms-devcentlp/1c24c7c8-28b0-4ce1-a47d-95fe1ff504bc">Open Specification Promise</a> and its structure is documented at <a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xlsb/acc8aa92-1f02-4167-99f5-84f9f676b95a">[MS-XLSB]</a>. The XLSB format was originally sometimes referred to as BIFF12, as in “binary file format for Office 12.”</p>
			<p>XLSB uses the same Open Packaging Conventions (<fddLink id="fdd000363">OPC/OOXML</fddLink>) container used by the Office Open XML formats. OPC is a container based on Z<fddLink id="fdd000355">ZIP_6_2_0</fddLink>; hence you can open an XLSB file with any ZIP tool to see what’s inside.  A diagram that illustrates the structure of an XLSB file as unzipped is shown under the heading &quot;File Format Number 2&quot; in <a href="https://web.archive.org/web/20060822030530/http://blogs.msdn.com/excel/archive/2006/07/20/671995.aspx">All About File Formats</a>, a blog post from Microsoft in July 2006, when Excel 2007 was in beta test.  &quot;File Format Number 1&quot; in the same post shows the equivalent XSLX file.  Unlike the XLSX example, in which all the parts within the package are encoded in XML, the XLSB file has many parts with .bin extensions.  Only a few supporting parts are in XML; the data and formulas are stored in a binary form that is closer to the form needed in memory.  For more technical detail on the structure of the XLSB format, see <a href="#notes">Notes</a> below.</p>
			<p>The XLSB format supports macros.  This is in contrast to the XLSX format; in the OOXML family of XML-based formats, the .xlsm extension must be used for spreadsheets with macros.</p>
			<p>The specification for XLSB is frequently updated.  With each new feature in Excel, specifications for the corresponding markup have been added to the [MS-XLSB] documentation, with changes documented.  See, for example, the Change Tracking section in <a href="https://interoperability.blob.core.windows.net/files/MS-XLSB/%5bMS-XLSB%5d-120120.pdf">[MS-XLSB]-120120</a>, which includes changes associated with new features for timelines and data &quot;slicers.&quot; See <a href="http://insightinformation.net/excel-2010-2013-data-slicers-taking-pivot-tables-to-a-new-level-of-control/">Excel 2010 &amp; 2013 Data Slicers Taking Pivot Tables To A New Level Of Control</a> for information about the new features.  As of late 2019, the most recent major change is to support Dynamic Arrays, a feature that appears to have been introduced first in Google Sheets.  See <a href="https://techcommunity.microsoft.com/t5/Excel-Blog/Preview-of-Dynamic-Arrays-in-Excel/ba-p/252944">Preview of Dynamic Arrays in Excel</a>.</p>
			<p>The XLSB format is supported in very few non-Microsoft products.  As of November 2019, Microsoft&apos;s <a href="https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference#file-formats-that-are-supported-in-excel">File Format Reference for Word, Excel, and PowerPoint</a> states of XLSB, &quot;this is not an XML file format and is therefore not optimal for accessing and manipulating content without using Excel 2019, Excel 2016, Excel 2013, Excel 2010 or Excel 2007 and the object model.&quot;  Since XLSB is not part of the XML-based Office Open XML family of formats, it is not supported for programmatic manipulation in the open-source <a href="https://docs.microsoft.com/en-us/office/open-xml/open-xml-sdk">Open XML SDK 2.5 for Office</a>.</p>
		</fdd:description>
		<fdd:shortDescription>a proprietary, but openly documented, Microsoft format for spreadsheets, supported in Excel as an alternative to the default XLSX since Excel 2007.  It is intended as a fast load-and-save file format for very large spreadsheets.  Not widely supported except in Microsoft products.</fdd:shortDescription>
		<fdd:productionPhase>Can be used in any production phase: for creating documents (initial state): for editing and review (middle-state); and for final distribution.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Subtype of</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000363</fdd:id>
					<fdd:shortName>OPC/OOXML_2012</fdd:shortName>
					<fdd:titleName>Open Packaging Conventions (Office Open XML), ISO 29500-2:2008-2012</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Subtype of</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000355</fdd:id>
					<fdd:shortName>ZIP_6_2_0</fdd:shortName>
					<fdd:titleName>ZIP File Format, Version 6.2.0 (PKWARE)</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Various features of the ZIP File Format are not permitted in OPC. Details on the use of ZIP in OPC are in section 10 and Annex C of ISO/IEC 29500-2:2012.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Affinity to</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000398</fdd:id>
					<fdd:shortName>XLSX/OOXML_2012</fdd:shortName>
					<fdd:titleName>XLSX Transitional (Office Open XML), ISO 29500:2008-2016, ECMA-376, Editions 1-5</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>An XSLB file without macros can be created from or converted to an XLSX file with full fidelity.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>Library staff creating spreadsheets as part of their duties typically use the <fddLink id="fdd000398">XLSX</fddLink> format.  As of late 2020, the Library of Congress had 556 files with the .xlsb extension in its digital collections, with a total size of over 7 gigabytes.</fdd:experience>
		<fdd:preference>For works acquired for its collections, the list of <a href="http://www.loc.gov/preservation/resources/rfs/data.html">Library of Congress Recommended Formats Statement for Datasets</a> includes XLSX (.xlsx) as a preferred format for datasets. The binary (.xls) format is also listed as preferred.  XLSB is not listed as either acceptable or preferred.</fdd:preference>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>The Microsoft Excel Binary XLSB file format is proprietary but openly documented and covered by Microsoft&apos;s <a href="https://docs.microsoft.com/en-us/openspecs/dev_center/ms-devcentlp/1c24c7c8-28b0-4ce1-a47d-95fe1ff504bc">Open Specification Promise</a>.  </fdd:disclosure>
		<fdd:documentation>The specification is available at <a href="https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xlsb/acc8aa92-1f02-4167-99f5-84f9f676b95a">[MS-XLSB]: Excel (.xlsb) Binary File Format</a>.  Note that the specification is updated frequently, with many revisions described by Microsoft as &quot;major.&quot;</fdd:documentation>
		<fdd:adoption>
			<p>Not widely supported except in Microsoft products.  The primary advantage of XLSB over XLSX is for faster loading and saving of very large spreadsheets.  Some users (individual or institutional) may choose to make XLSB the default format to use for saving spreadsheet workbooks.  The compilers of this resource have not been able to determine how widely the XLSB format is used.  <a href="../contact_format.shtml">Comments welcome</a>.</p>
			<p>Among the commercial products that support the format are some software libraries aimed at developers.  <a href="http://xlsgen.arstdesign.com/">Xlsgen</a> describes itself as &quot;a software component which reads, writes, calculates, renders and print any Excel 97 / 2000 / XP / 2003 / 2007 / 2010 / 2013 / 2016 spreadsheets.&quot;  Among the languages that can be used with xlsgen are VB, VBScript, VBA, VB.NET, C#, C, C++, Java, Delphi, Perl, and Python. <a href="https://docs.aspose.com/display/cellsproductfamily/Home">Aspose Cells</a> is a family of spreadsheet programming libraries for various programming languages, including Java, C++, and environments, including .NET and Android. The Aspose libraries support XLSB for reading, writing, rendering, and printing.</p>
			<p>
				<a href="https://wiki.openoffice.org/wiki/Documentation/OOo3_User_Guides/Getting_Started/File_formats">OpenOffice</a> and <a href="https://ask.libreoffice.org/en/question/6798/why-no-save-as-xlsb/">LibreOffice</a>, free user applications based on open-source code, can read files in XLSB format but cannot write them.  The compilers of this resource have not determined whether these open-source applications can handle features added to the XLSB format since its initial release.  <a href="../contact_format.shtml">Comments welcome</a>
			</p>
		</fdd:adoption>
		<fdd:licensingAndPatents>
			<p>Covered by Microsoft&apos;s <a href="https://docs.microsoft.com/en-us/openspecs/dev_center/ms-devcentlp/1c24c7c8-28b0-4ce1-a47d-95fe1ff504bc">Open Specification Promise</a>, whereby Microsoft &quot;irrevocably promises&quot; not to assert any claims against those making, using, and selling conforming implementations of any specification covered by the promise (so long as those accepting the promise refrain from suing Microsoft for patent infringement in relation to Microsoft&apos;s implementation of the covered specification).</p>
		</fdd:licensingAndPatents>
		<fdd:transparency>Although it is possible to look inside the ZIP-based wrapper and some parts of the package are in XML, such as the metadata in core.xml, the .bin files that contain the main worksheet content cannot be interpreted or used without spreadsheet software that supports the format.</fdd:transparency>
		<fdd:selfDocumentation>
			<p>The <i>File Properties</i> features of XLSB build on the features supported for <fddLink id="fdd000398">XLSX/OOXML</fddLink>. Limited capabilities for descriptive metadata for XLSB and XLSX files as a whole are supported as Core Properties as specified in <fddLink id="fdd000363">OPC/OOXML</fddLink>.</p>
			<p>Beyond the Core Properties, the XLSB formats use the Custom File Properties and Extended File Properties features of Part 1 of the <fddLink id="fdd000395">OOXML family</fddLink> of specifications (ISO/IEC 29500 and ECMA-376) to store names for component worksheets and for named ranges in worksheets.]  See <a href="#useful">Useful References</a> below for links to the relevant normative references for the XLSB specification.</p>
			<p>
				<b>Accessibility Features</b>
			</p>
			<p>See <fddLink id="fdd000395">OOXML Format Family</fddLink> for web accessibility information.</p>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>An XLSB workbook may pull in data from external data sources, such as databases.</fdd:externalDependencies>
		<fdd:techProtection>An XLSB workbook can contain sensitive information that needs to be protected. A file can be protected by encrypting it using a password. Once a file is encrypted, the data can only be accessed by decrypting the file using a password.</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:datasetQF>
			<fdd:normalDataset>No specific set of factors for assessing quality and functionality of a spreadsheet format has been developed.  Once loaded into a spreadsheet application that supports the XLSB format, the functionality of a spreadsheet in the XLSB format is expected to be identical to that of the <fddLink id="fdd000398">XLSX/OOXML</fddLink> format.</fdd:normalDataset>
			<fdd:beyondDataset>The special features of the XLSB format compared to the XLSX format are:  files size for storage and transmission are usually smaller for an XLSB file; time to load into an application is typically less for an XLSB file.</fdd:beyondDataset>
		</fdd:datasetQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>xlsb</fdd:sigValue>
				</fdd:sigValues>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/vnd.ms-excel.sheet.binary.macroEnabled.12</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>Documented by Microsoft at <a href="https://blogs.msdn.microsoft.com/vsofficedeveloper/2008/05/08/office-2007-file-format-mime-types-for-http-content-streaming-2/">Office 2007 File Format MIME Types for HTTP Content Streaming</a>.  Also listed at <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#application">IANA</a>.  See 2011 registration at <a href="https://www.iana.org/assignments/media-types/application/vnd.ms-excel.sheet.binary.macroEnabled.12">https://www.iana.org/assignments/media-types/application/vnd.ms-excel.sheet.binary.macroEnabled.12</a>.</fdd:note>
			</fdd:internetMediaType>
			<fdd:other>
				<fdd:tag>File signature</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>There is no immediately accessible string pattern for identifying an XLSB file which uses a container of the format <fddLink id="fdd000363">OPC/OOXML_2012</fddLink>, which is a constrained implementation of <fddLink id="fdd000355">ZIP_6_2_0</fddLink>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Other</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Target=&quot;xl/workbook.bin&quot;</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>This signifier assumes the usual name of the main part of an XLSB file. The target declaration will occur in the top-level Relationships part (<i>\_rels\.rels</i> part in an OPC package of a XLSB file, as an attribute of a &lt;Relationship&gt; element within the &lt;Relationships&gt; element.  In an XLSB file, it will be a relationship of type <i>http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument</i>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Other</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>NF00311</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>See NARA File Format Preservation Plan ID <a href="https://www.archives.gov/files/lod/dpframework/id/NF00311.ttl">https://www.archives.gov/files/lod/dpframework/id/NF00311.ttl</a> for Microsoft Word for Windows 2007-onwards (OOXML). Note that NARA does not specify versions.
					</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Pronom PUID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>fmt/595</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>PRONOM entry for Microsoft Excel Non-XML Binary Workbook, 2007 onwards.  See <a href="http://www.nationalarchives.gov.uk/PRONOM/fmt/595">http://www.nationalarchives.gov.uk/PRONOM/fmt/595</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Q66759528</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>See <a href="https://www.wikidata.org/wiki/Q66759528">https://www.wikidata.org/wiki/Q66759528</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>The XLSB workbook data is contained in a ZIP package conforming to the Open Packaging Conventions (<fddLink id="fdd000363">OPC/OOXML</fddLink>). Individual files stored in the ZIP package, called &quot;parts&quot; in the specification, contain information about the content of a workbook including workbook data such as worksheet definitions. A few parts store information in XML and other parts may contain information stored as a binary stream of bytes, e.g., for embedded images.  But the majority of the workbook structure and content is stored as binary &quot;records.&quot;  Each binary record contains its record type (as an integer code), record length (in bytes), and zero or more type-specific fields depending on its record type.  This deceptively simple structure hides the complexity of the structure of spreadsheet data.  As of 2019, the [MS-XLSB] specification includes 844 record types.</p>
			<p>Shortly after the release of Excel 2007 in beta test, Stephane Rodriguez did some reverse engineering of the binary format.  His analysis in <a href="http://www.arstdesign.com/articles/office2007bin.html">Office 2007 .bin file format</a> complements the <a href="https://hdl.loc.gov/loc.gdc/digformat.000004.1">original specification</a> for XLSB, which was not published until after his reverse-engineering efforts.  The details that follow are derived from the [MS-XLSB] specification and the analysis by Rodriguez.</p>
			<p>An XLSB file created by Excel contains exactly one Workbook part, workbook.bin.  The Workbook part refers to Worksheet parts (e.g. worksheet1.bin, worksheet2.bin).  The specification states, &quot;Unless otherwise specified, all data in files of the type specified by this document are stored in little-endian format.&quot;  See <a href="https://en.wikipedia.org/wiki/Endianness">Wikipedia entry on endianness</a>.  Numeric values in XSLB files are stored according to the IEEE Standard for Binary Floating-Point Arithmetic&quot;, IEEE 754-1985, October 1985.  See <a href="https://en.wikipedia.org/wiki/IEEE_754">Wikipedia entry for IEEE 754</a>.  Text strings are stored as arrays of 16-bit Unicode characters prefixed by an integer value for the length of the string.  Formulas are stored in a compact tokenized representation known as a &quot;parsed expression&quot; containing a sequence of parse tokens. The tokens represent operators, operands, functions, etc. For example, each function supported in Excel is identified by an unsigned integer, which is used as the token. Tokens are ordered according to <a href="https://en.wikipedia.org/wiki/Reverse_Polish_notation">Reverse Polish</a> notation, a commonly used logical system for the specification of mathematical formulas in an order that corresponds to the order required for evaluation.  A parsed expression is converted into a textual formula at runtime for display and user editing.  [Note: The term &quot;formula bytecode&quot; has also been used for the representation termed &quot;parsed expression&quot; in the XLSB specification; Rodriguez uses this term in his analysis.]</p>
		</fdd:general>
		<fdd:history>
			<p>The XLSB format was introduced by Microsoft in 2006 for Office 2007 as one of the formats in which an Excel spreadsheet could be saved.  Office 2007 was also known as Office 12 and the XLSB format was often referred to as BIFF12 at that time. The <a href="https://hdl.loc.gov/loc.gdc/digformat.000004.1">original documentation for the format</a> was released as [MS-XLSB] in 2007.</p>
			<p>With each new feature in Excel, specifications for the corresponding markup, such as new elements and attributes, have been added to the [MS-XLSB] documentation, with changes from the previous documented in a clause titled Change Tracking.</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xlsb/acc8aa92-1f02-4167-99f5-84f9f676b95a</link>
					<tag>[MS-XLSB]: Excel (.xlsb) Binary File Format (latest version)</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Resources from Microsoft from around 2006, the time of the introduction of the XLSB format with Excel 2007 as an alternative format to the default format for spreadsheets (<fddLink id="fdd000398">XSLX/OOXML</fddLink>).</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://blogs.msdn.microsoft.com/dmahugh/2006/08/22/new-binary-file-format-for-spreadsheets/</link>
							<tag>New Binary File Format for Spreadsheets | post in Microsoft Interoperability Blog</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://hdl.loc.gov/loc.gdc/digformat.000004.1</link>
							<tag>Microsoft Office Excel 2007 Binary File Format (.xlsb) Specification | as of 2007</tag>
							<comment>First version published under Microsoft Open Specification Promise.</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://web.archive.org/web/20060822030530/http://blogs.msdn.com/excel/archive/2006/07/20/671995.aspx</link>
							<tag>All About File Formats (Excel 2007)</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://docs.microsoft.com/en-us/previous-versions/office/developer/office-2007/aa338205(v=office.12)</link>
							<tag>Introducing the Office (2007) Open XML File Formats  (May 2006)</tag>
							<comment>This page is no longer being maintained and has several dead links.</comment>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference</link>
					<tag>File format reference for Word, Excel, and PowerPoint | from Microsoft</tag>
					<comment>Applies to recent versions of Microsoft Office.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Selected normative references for the MS-XLSB Specification (see <a href="#specs">Format Specifications</a> above.)  These links are provided here because the support for &quot;file properties&quot; in XLSB is by reference to these Office Open XML standards (ISO/IEC 29500 and the equivalent ECMA-376).  Markup for Core Properties is specified in clause 11 of Part 2; markup for Custom File Properties and Extended File Properties is specified in section 15.2.12 of Part 1.The ISO/IEC specifications listed below are available for free download from <a href="https://standards.iso.org/ittf/PubliclyAvailableStandards/index.html">Publicly Available Standards</a> from the ISO/IEC Information Technology Task Force (ITTF).  The equivalent ECMA-376 versions are downloadable from <a href="https://www.ecma-international.org/publications/standards/Ecma-376.htm">ECMA-376:
Office Open XML File Formats</a>.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>http://standards.iso.org/ittf/PubliclyAvailableStandards/c061796_ISO_IEC_29500-2_2012.zip</link>
							<tag>ISO/IEC 29500-2:2012
Information technology — Document description and processing languages — Office Open XML File Formats — Part 2: Open Packaging Conventions</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-376,%20Fourth%20Edition,%20Part%202%20-%20Open%20Packaging%20Conventions.zip</link>
							<tag>ECMA-376 4th edition Part 2 (2012)</tag>
							<comment>Equivalent to ISO/IEC 29500-2:2012.</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://standards.iso.org/ittf/PubliclyAvailableStandards/c071691_ISO_IEC_29500-1_2016.zip</link>
							<tag>ISO/IEC29500-1:2016, Office Open XML File Formats — Part 1: Fundamentals and Markup Language Reference</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-376,%20Fifth%20Edition,%20Part%201%20-%20Fundamentals%20And%20Markup%20Language%20Reference.zip</link>
							<tag>ECMA-376 5th edition Part 1 (2016)</tag>
							<comment>Equivalent to ISO/IEC 29500-1:2016.</comment>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.arstdesign.com/articles/office2007bin.html</link>
					<tag>Office 2007 .bin file format (2007)| by Stephane Rodriguez</tag>
					<comment>Useful article on XLSB format based on reverse engineering.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Resources comparing XLSB and XLSX formats:</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://analystcave.com/excel-working-with-large-excel-files-the-xlsb-format/</link>
							<tag>Excel XLSB vs XLSX file format. The Pros and Cons of XLSB Files (2015) | post from AnalystCave</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.spreadsheet1.com/how-to-save-as-binary-excel-workbook.html</link>
							<tag>XLSX vs XLSB: How To Save A Workbook In Binary Format </tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.lifewire.com/xlsb-file-2622534</link>
							<tag>What Is an XLSB File? | from Lifewire</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>http://www.excelforum.com/excel-general/850126-xlsb-vs-xlsx.html</link>
							<tag>.xlsb vs .xlsx (2012) | Q &amp; A from Excel Forum</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://fileformats.archiveteam.org/wiki/XLSB</link>
					<tag>XLSB page from Let&apos;s Solve the File Format Problem!</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Resources related to support for the XLSB file format in open-source applications.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://wiki.openoffice.org/wiki/Documentation/OOo3_User_Guides/Getting_Started/File_formats</link>
							<tag>OpenOffice: Getting Started | File formats OOo can open</tag>
							<comment>Support for importing XLSB files was added in Calc 3.</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://ask.libreoffice.org/en/question/6798/why-no-save-as-xlsb/</link>
							<tag>Q&amp;A from LibreOffice | Why no save as xlsb? (2012)</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Commercial software libraries, aimed at developers, that support reading, writing, rendering, and printing of files in the XLSB format.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>http://xlsgen.arstdesign.com/</link>
							<tag>xlsgen</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://docs.aspose.com/display/cellsproductfamily/Home</link>
							<tag>Aspose.Cells Product Family</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.nationalarchives.gov.uk/PRONOM/fmt/595</link>
					<tag>PRONOM entry for fmt/595</tag>
					<comment>Information in PRONOM on Microsoft Excel Non-XML Binary Workbook 2007 onwards.  PUID: fmt/595</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.wikidata.org/wiki/Q66759528</link>
					<tag>Wikidata entry for Q66759528</tag>
					<comment>Information in Wikidata on Excel Binary Workbook.  Wikidata Title ID: Q66759528</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.archives.gov/files/lod/dpframework/id/NF00311.ttl</link>
					<tag>NARA File Format Preservation Plan ID entry for NF00311</tag>
					<comment>Information in NARA File Format Preservation Plan ID about Microsoft Word for Windows 2007-onwards (OOXML).</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
