<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000539" titleName="7z File Format" shortName="7z" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-2.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>aggregate</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>container-bundle</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:updates>
			<fdd:date>2023-09-06</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Full</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>7z File Format</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>7z</fdd:keyword>
			<fdd:keyword>archive file formats</fdd:keyword>
			<fdd:keyword>package formats</fdd:keyword>
			<fdd:keyword>container formats</fdd:keyword>
			<fdd:keyword>bundling formats</fdd:keyword>
			<fdd:keyword>aggregate formats</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>7z is an archive file format that supports a variety of compression methods and encryption. 7z was initially the default format for <a href="https://www.7-zip.org/">7-Zip</a>, developed by Igor Pavlov in 1999 that was used to compress groups of files. There is no formal format specification for 7z but the <a href="https://github.com/jljusten/LZMA-SDK/blob/master/DOC/7zFormat.txt">LZMA compression specification</a> serves as an &quot;unofficial&quot; specification with information on the file and byte structure. There are other specification options from third-party sources including but not limited to <a href="https://py7zr.readthedocs.io/en/latest/archive_format.html">py7zr</a>, a 7z python library that also documents the file's key characteristics and structure.  According to 7-zip.org, the official homepage for the 7-Zip file archiving program, the 7z file format has the <a href="https://www.7-zip.org/7z.html">following main features:</a>
			</p>
			<ul>
				<li>An open architecture, which allows the support for a variety of compression methods. (See below)</li>
				<li>High compression ratio (dependent on the compression method used)</li>
				<li>AES-256 encryption</li>
				<li>Large file size support, up to 1600 terabytes</li>
				<li>Unicode file names </li>
				<li>Archive header compression</li>
				<li>Support for solid compression, where multiple files of a similar type are compressed within a single stream.</li>
			</ul>
			<p/>
			<p>7z files are compatible with several compression methods because of its open architecture. More compression options may follow in time. The following are a list of compression methods, as stated by <a href="https://www.7-zip.org/7z.html">7-zip.org</a> that are integrated with the 7z file format:</p>
			<ul>
				<li>
					<a href="https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm">LZMA</a>, an optimized version of the LZ77 compression algorithm. LZMA is the default compression method for 7z files.</li>
				<li>LZMA2, an improved version of the LZMA compression method</li>
				<li>PPMD</li>
				<li>BCJ, converter for 32 bit x86 executables</li>
				<li>BCJ2, converter for 32 bit x86 executables</li>
				<li>Bzip2, BWT algorithm</li>
				<li>Deflate, another LZ77 based compression algorithm</li>
			</ul>
			<p>Per <a href="https://www.7-zip.org/history.txt">7-zip.org's 7z history</a>, beginning in 2008, 7z supported UTF-8 encoding for filenames. 7z archives now have 3 distinct modes:</p>
			<ul>
				<li>If there are no required symbols, then the default mode uses UTF-8.</li>
				<li>mcu-switch: if there are non-ASCII symbols then 7-Zip uses UTF-8 encoding.</li>
				<li>mcl-switch: 7-Zip uses local code page.</li>
			</ul>
			<p>The file structure for 7z files begins with a “signature header”. The header can contain information about the version number where version numbers consist of two bytes. A major version consists of the bytes "0x00" and a minor version has the bytes "0x04". As explained in the <a href="https://github.com/jljusten/LZMA-SDK/blob/master/DOC/7zFormat.txt">LZMA 7z file format specification</a>, the data block is placed after the signature header known as &quot;Packed Streams.&quot; The signature header should consist of 32 bytes with the first six bytes of any given 7z file consisting of the same bytes as follows, <![CDATA[{'7', 'z', 0xBC, 0xAF, 0x27, 0x1C}]]>. &quot;Packed Streams&quot; is optional as the data block may be empty. From <a href="https://github.com/jljusten/LZMA-SDK/blob/master/DOC/7zFormat.txt">LZMA's GitHub</a>, 7z files use little endian encoding where the least significant bytes are stored first. The majority of the file structure is a sequence of "Property IDs" which dictate the type of information contained within the 7z file. The py7zr documentation lists all of the associated IDs for each type of property including:</p>
			<ul>
				<li>Header</li>
				<li>Fileinfo</li>
				<li>Substreams info</li>
				<li>Folder</li>
			</ul>
			<p>The &quot;Files Information&quot; or &quot;Fileinfo&quot; Property ID can contain information about the files within the archive including: number of files, names, sizes, timestamps, and select attributes such as permissions.</p>
			<p>The file structure also contains Codec IDs which correspond to specific compression methods (such as the ones listed above). Some of those Codec IDs are defined as follows:</p>
			<ul>
				<li>LZMA - 0x030101</li>
				<li>BCJ - 0x04</li>
				<li>LZMA2 - 0x21</li>
				<li>Bzip2 - 0x040202</li>
				<li>Deflate - 0x040108</li>
			</ul>
			<p>Additional compression Codec IDs can be found in the py7zr documentation as well as <a href="https://github.com/jljusten/LZMA-SDK/blob/master/DOC/Methods.txt">LZMA's GitHub</a>, which provides information about many of the aforementioned compression methods. The 7z file format also supports <a href="https://en.wikipedia.org/wiki/Solid_compression">solid compression</a>, where several files of a similar type are compressed within a single stream to avoid redundancies.</p>
			<p>7z files utilize <a href="https://www.nist.gov/publications/advanced-encryption-standard-aes">AES (Advanced Encryption Standard)</a> encryption. As stated in its definitive <a href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf">standard</a>, the encryption uses a cypher that converts the data to an unintelligible form called ciphertext while the decryption converts the data back to its original format, or plaintext. The AES encryption method is able to use cryptographic keys of 128, 192, and 256 bits. The 7z format also supports file naming encryption.</p>
			<p>Peazip (another compression program similar to 7zip, Winzip, among others) <a href="https://peazip.github.io/peazip-compression-benchmark.html">GitHub</a> released a compression benchmark that compared a variety of compression software programs including Peazip, Winzip, WinRar, and 7-Zip. Most of the focus of this benchmark pinpoints the strengths and weaknesses of the particular compression programs, but it should be noted that the results summary highlighted that 7z files provided better compression but slower speeds than <fddLink id="fdd000450">RAR</fddLink> files while decompression speeds were comparable to <fddLink id="fdd000354">ZIP</fddLink> and <fddLink id="fdd000450">RAR</fddLink> files making it a good candidate for content distribution.</p>
			<p>For more information on the history of 7z and the 7-Zip application, see <a href="#notes">Notes</a>.</p>
			<p>A note on terminology. In computing and in many standards specifications, 7z, ZIP, RAR, tar and the like  are classified as archive files. This site is using the term aggregate instead of archive when defining quality and functional factors because the latter term archive has broader community use beyond the definitions of these formats. The term aggregate is used here instead to convey the basic function of bringing disparate parts together into a single collective object but also with the added features of compression, potential for encryption, error detection and more. See <a href="#factors">Quality and Functionality Factors</a> for more information.</p>
		</fdd:description>
		<fdd:shortDescription>7z is an archive file format that supports high compression rates, encryption, and an open architecture that accommodates a variety of compression methods. </fdd:shortDescription>
		<fdd:productionPhase>May be used at any life-cycle phase for bundling files. When compressed with an external software program, maybe used at any life-cycle phase for packaging files for exchange and portability.</fdd:productionPhase>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>The Library has over 2,000 7z files inventoried on long-term storage. 7z files have frequently been used as the delivery format for large collections of e-resource content.</fdd:experience>
		<fdd:preference>The Library of Congress Recommended Formats Statement (RFS) lists 7z as an Acceptable format for <a href="https://www.loc.gov/preservation/resources/rfs/data.html">Datasets</a>.</fdd:preference>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>The file format specification is partially documented in the LZMA’s <a href="https://github.com/jljusten/LZMA-SDK">GitHub</a>, openly available since 2015. The specification is found in a plain text document in <a href="https://github.com/jljusten/LZMA-SDK/blob/master/DOC/7zFormat.txt">GitHub</a>. It should be noted that the GitHub space is described as the "Unofficial" Git mirror of LZMA releases. An additional unofficial specification for the 7z python library is also publicly available at <a href="https://py7zr.readthedocs.io/en/latest/archive_format.html">Py7zr</a>.</fdd:disclosure>
		<fdd:documentation>The 2015 file format specification is publicly available on <a href="https://github.com/jljusten/LZMA-SDK">GitHub</a> and was jointly developed by Igor Pavlov and Jordan Justen. There is also a file format specification from a third party source from <a href="https://py7zr.readthedocs.io/en/latest/archive_format.html">py7zr</a>, a 7z python library. Py7zr is written and maintained by Hiroshi Miura and also maintains its own <a href="https://github.com/miurahr/py7zr">GitHub</a> as well.</fdd:documentation>
		<fdd:adoption>
			<p>Below is a non-comprehensive list of applications that can open 7z files. This list can be found at <a href="https://www.7-zip.org/links.html">7-zip.org</a>
			</p>
			<p>Windows:</p>
			<ul>
				<li>WinRAR</li>
				<li>PowerArchiver</li>
				<li>Peazip</li>
			</ul>
			<p>MAC OS X:</p>
			<ul>
				<li>Unarchiver</li>
				<li>Commander One</li>
				<li>Keka</li>
			</ul>
			<p>Linux:</p>
			<ul>
				<li>p7zip</li>
			</ul>
			<p>7z files can be created using the <a href="https://www.7-zip.org/">7-Zip</a> graphic interface as well as via command line operations using both UNIX and LINUX systems. Examples of documentation for command line operations to create 7z files can be found at <a href="https://7ziphelp.com/7zip-command-line">7ziphelp</a>, which provides tutorials on using different 7-Zip application functions.</p>
			<p>There is also considerable support from a variety of software programs to convert 7z files to other archive file formats. Lifewire’s <a href="https://www.lifewire.com/7z-file-2619277">entry for 7z files</a> highlights software programs such as Zamzar that can convert 7z files to other archive formats such as <fddLink id="fdd000354">ZIP</fddLink>, <fddLink id="fdd000450">RAR</fddLink>, <fddLink id="fdd000348">ISO_image</fddLink>, and <fddLink id="fdd000531">tar</fddLink> files. </p>
		</fdd:adoption>
		<fdd:licensingAndPatents>No licensing and patent restrictions for 7z files. 7-Zip uses the GNU LGPL, <a href="https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License">GNU Lesser Genera - Public License)</a>, which is a free-software license. License text within the context of 7-Zip are explained on 7-Zip's <a href="https://www.7-zip.org/license.txt">website</a>.<p/>
		</fdd:licensingAndPatents>
		<fdd:transparency>Transparency of compressed 7z files are dependent upon tools, software programs, and necessary algorithms used to read the file.</fdd:transparency>
		<fdd:selfDocumentation>
			<p>The 7z file format provides no additional metadata support beyond what is needed to support unpacking the archive and extracting the component items into a file system. </p>
			<p>
				<b>Accessibility Features</b>
			</p>
			<p>No specific features in the file format. Features to support accessibility would be found in the bundled and compressed files (such as embedded captions and subtitles in audiovisual content, tagged and structured text in textual documents, and alt text for images). Aggregate files can also contain separate files for transcripts, timed text or captions as part of the bundled package. See <a href="#identification">Relationships to other formats</a> for details.</p>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>7z files can be created using the <a href="https://www.7-zip.org/">7-Zip</a> graphic interface as well as via command line operations using both UNIX and LINUX systems. Examples of documentation for command line operations to create 7z files can be found at <a href="https://7ziphelp.com/7zip-command-line">7ziphelp</a>, which provides tutorials on using different 7-Zip application functions. No external dependencies beyond available software to extract and decompress a compressed 7z files.</fdd:externalDependencies>
		<fdd:techProtection>
			<p>7z files can also utilize <a href="https://www.nist.gov/publications/advanced-encryption-standard-aes">AES (Advanced Encryption Standard)</a> encryption. The bit key is generated from a passphrase supplied by users that is based on the SHA-256 hash function. As stated in its definitive <a href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf">standard</a>, the encryption uses a cypher that converts the data to an unintelligible form called ciphertext while the decryption converts the data back to its original format, or plaintext. The AES encryption method is able to use cryptographic keys of 128, 192, and 256 bits. The 7z format also supports file naming encryption.</p>
			<p>There are a variety of documentation sources such as <a href="https://www.uvic.ca/systems/support/informationsecurity/fileencryption/encryptfile7zip.php">the University of Victory University Systems</a> provide information for users on how to use the 7-Zip program to encrypt 7z archive files.</p>
		</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:aggregateQF>
			<fdd:compress>The 7z file format supports <a href="https://en.wikipedia.org/wiki/Solid_compression">solid compression</a>, where several files of a similar type are compressed within a single stream to avoid redundancies. Solid compression is also supported with <fddLink id="fdd000450">RAR</fddLink> and <fddLink id="fdd000531">tar</fddLink> archive file formats. The 7z file format uses a variety of compression methods including: LZMA, LZMA2, Bzip2, PPMd and DEFLATE
						</fdd:compress>
			<fdd:error>7z files store CRC-32 checksums in the &quot;Next Header CRC&quot; a component of the &quot;Signature Header&quot; of the file. 7z files consist of data blocks known as packed streams where each packed stream has a CRC-32 checksum, which may checked upon extraction. Uncompressed data in 7z files known as the &quot;Coders Information&quot; also contains CRC-32 checksums in the header section. <a href="https://www.7-zip.org/recover.html">7-zip.org</a> provides step-by-step documentation on how to recover corrupted 7z archive files.</fdd:error>
			<fdd:beyondAGG>The 7-Zip archive program allows the 7z file format to support multi-part archives such as 7z.0001, 7z.0002, etc. These multi-part files can also be reassembled using the &quot;Combine Files&quot; menu option in 7-Zip. Multi-part 7z files can also be unpacked in the command line using the 7z UNIX and LINUX systems. <b>All</b> segments of the multi-part archive must be in the same folder or server space to run command line operations to unpackage the files.</fdd:beyondAGG>
		</fdd:aggregateQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>7z</fdd:sigValue>
					<fdd:sigValue>s7z</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>.s7z files are compressed 7-Zip files specifically from Mac OS. Read more at Reviversoft's <a href="https://www.reviversoft.com/en/file-extensions/s7z">s7z overview</a>.</fdd:note>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/x-7z-compressed</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>There is no registration at IANA for an Internet Media Type for the 7z file format. Particularly of note is the presence of the &quot;x&quot; in the mediatype. Per <a href="https://www.rfc-editor.org/rfc/rfc6838">RFC's Meda Type Specifications and Registration Procedures</a>, &quot;names with &quot;x&quot; as the first facet may be used for types that are intended exclusively for use in private, local environments. These mediatypes cannot be registered and are strictly intended for use with the parties exchanging them.&quot; See RFC Section 3.4 for more information. See <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types">developer.mozilla.org</a> or the <a href="https://en.wikipedia.org/wiki/7z">Wikipedia entry for 7z</a>.
				</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValues>
					<fdd:sigValue>&apos;7&apos;, &apos;z&apos;, 0xBC, 0xAF, 0x27, 0x1C</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>See <a href="https://en.wikipedia.org/wiki/7z">Wikipedia entry for 7z</a>.</fdd:note>
			</fdd:magicNumbers>
			<fdd:magicNumbers>
				<fdd:sigValues>
					<fdd:sigValue>37 7A BC AF 27 1C</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>See GCK’s File Signature Table at <a href="https://web.archive.org/web/20221112073316/https://www.garykessler.net/library/file_sigs.html">garykessler.net</a>
				</fdd:note>
			</fdd:magicNumbers>
			<fdd:other>
				<fdd:tag>Uniform Type Identifier (Mac OS)</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>org.7-zip.7-zip-archive</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>See the <a href="https://en.wikipedia.org/wiki/7z">Wikipedia entry for 7z</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Pronom PUID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>fmt/484</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>For 7zip file format, see <a href="https://www.nationalarchives.gov.uk/PRONOM/fmt/484">https://www.nationalarchives.gov.uk/PRONOM/fmt/484. Outline record only.</a>
					</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Q270131</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>For 7z, family of archive file formats used by 7-Zip. See <a href="https://www.wikidata.org/wiki/Q270131">https://www.wikidata.org/wiki/Q270131</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Q27492089</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>For 7z format description, technical specification of the 7z file format. See <a href="https://www.wikidata.org/wiki/Q27492089">https://www.wikidata.org/wiki/Q27492089</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:history>
			<p>7-Zip.org provides an extensive history of the archive program and file format on <a href="https://www.7-zip.org/history.txt">7-Zip's site</a>. The original beta version was first released on January 2, 1999. The 7z file format was designated the default format for the 7z.exe and 7za.exe applications. Further support for additional compression programs such as bzip2, gzip, tar, and zip was developed in late 2001. 7-Zip’s history log chronicles ongoing bug fixes, software improvements, and additional functionality with the latest entry on December 26, 2021.</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://github.com/jljusten/LZMA-SDK/blob/master/DOC/lzma-specification.txt</link>
					<tag>LZMA compressed data and LZMA file format specification (draft).</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://py7zr.readthedocs.io/en/latest/archive_format.html#</link>
					<tag>7z File Format Specification.</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Third Party File Format Specifications.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://py7zr.readthedocs.io/en/latest/index.html</link>
							<tag>Py7zr – 7z library on python 7z file format specification.</tag>
							<comment>Unofficial file format specification. </comment>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Wikipedia References and Sources</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/7z</link>
							<tag>Wikipedia entry for 7z.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/List_of_archive_formats</link>
							<tag>Wikipedia entry for List of archive formats.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/7-Zip</link>
							<tag>Wikipedia entry for 7-Zip.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm</link>
							<tag>Wikipedia for LMZA.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/Bzip2</link>
							<tag>Wikipedia entry for bzip2.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/Solid_compression</link>
							<tag>Wikipedia entry for solid compression.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://en.wikipedia.org/wiki/Prediction_by_partial_matching</link>
							<tag>Wikipedia entry for partial matching.</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>General References and Sources</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://docs.fileformat.com/compression/7z/</link>
							<tag>7z file format.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://file.org/extension/7z</link>
							<tag>7z File – Opening and Understanding.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://fileinfo.com/extension/7z</link>
							<tag>.7Z File Extension.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.7-zip.org/license.txt</link>
							<tag>7-Zip. License for use and distribution.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.7-zip.org/recover.html</link>
							<tag>7-Zip. How to recover corrupted 7z archive.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://peazip.github.io/peazip-compression-benchmark.html</link>
							<tag>Compression benchmark: 7-Zip, PeaZip, WinRar, Winzip comparison.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.reviversoft.com/en/file-extensions/s7z</link>
							<tag>.s7z File Extension.</tag>
							<comment/>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf</link>
							<tag>Announcing the
ADVANCED ENCRYPTION STANDARD (AES).</tag>
							<comment/>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.nist.gov/publications/advanced-encryption-standard-aes</link>
							<tag>Advanced Encryption Standard (AES)
</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://7ziphelp.com/7zip-command-line</link>
							<tag>7-Zip Command Line Examples — All Syntaxes Shared Here.</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://info.nrao.edu/computing/guide/file-access-and-archiving/7zip/7z-7za-command-line-guide</link>
							<tag>Command-line Guide for Linux, Mac &amp; Windows.</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>PRONOM and Wikidata IDs</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>https://www.nationalarchives.gov.uk/PRONOM/fmt/484</link>
							<tag>PRONOM entry for fmt/484</tag>
							<comment>Information in PRONOM from UK National Archives about 7z: fmt/484. Outline record only.</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.wikidata.org/wiki/Q270131</link>
							<tag>Wikidata entry for Q270131</tag>
							<comment>Information in Wikidata entry for 7z file format family. Wikidata Title ID: Q270131.</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://www.wikidata.org/wiki/Q27492089</link>
							<tag>Wikidata entry for Q27492089</tag>
							<comment>Information in Wikidata entry for 7Z format description. Wikidata Title ID: Q27492089.</comment>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
