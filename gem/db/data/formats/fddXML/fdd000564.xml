<?xml version="1.0" encoding="UTF-8"?><fdd:FDD id="fdd000564" titleName="VRM" shortName="VRM" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-2.xsd">	<fdd:properties>		<fdd:gdfrGenreSelection>			<fdd:gdfrGenre>model</fdd:gdfrGenre>		</fdd:gdfrGenreSelection>		<fdd:formatCategories>			<fdd:category>file-format</fdd:category>		</fdd:formatCategories>		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>		<fdd:updates>			<fdd:date>2023-04-30</fdd:date>		</fdd:updates>		<fdd:draftStatus>Preliminary</fdd:draftStatus>	</fdd:properties>	<fdd:identificationAndDescription>		<fdd:fullName>VRM</fdd:fullName>		<fdd:keywords>			<fdd:keyword>3D formats</fdd:keyword>			<fdd:keyword>design formats</fdd:keyword>			<fdd:keyword>animation formats</fdd:keyword>		</fdd:keywords>		<fdd:description>			<p>VRM is a <fddLink id="fdd000500">glTF2.0</fddLink> based format for handing humanoid 3D avatar (3D model) data for Virtual Reality (VR) applications. Defined and developed by the <a href="https://vrm-consortium.org/en/">General Incorporated Association VRM Consortium</a> (shortened to VRM Consortium going forward), established in April 2019, with the goal to standardize a platform-independent 3D avatar file format, VRM, and with the objective (per <a href="https://vrm-consortium.org/common/pdf/en_release.pdf">press release</a>) of "building an environment that allows for further breakthrough in national and international AR/VR markets where 3D avatars are being utilized." The VRM format and its standard implementation (<a href="https://github.com/vrm-c/UniVRM">UniVRM</a>) is open source and publicly available free of charge. <a href="https://vrm.dev/en/vrm1/index.html">VRM 1.0 specification</a> was released in September 2022.</p>			<p>				<b>Structure of VRM:</b>			</p>			<p>VRM Documentation states, "VRM is formulated on top of the 3D standard format gITF 2.0 to handle the humanoid model. The humanoid motion can be reproduced based on defined Humanoid bones in VRM."</p>			<p>The Khronos Group presented "<a href="https://www.khronos.org/assets/uploads/developers/presentations/VRM-Extending-glTF-for-Portable-Humanoid-Avatars_SIGGRAPH-Asia_Nov19.pdf">VRM - Extending glTF for Portable Humanoid Avatars</a>", in November 2019 to SIGGRAPH Conference, and described the VRM structure as, "... glTF based... VRM creates intermediate layer and constraints that makes application capable to control avatars in uniform manner." </p>			<ul>				<li>material extension: <a href="https://en.wikipedia.org/wiki/Cel_shading">cel shading</a>, <a href="https://en.wikipedia.org/wiki/Non-photorealistic_rendering#:~:text=Non%2Dphotorealistic%20rendering%20(NPR),graphics%2C%20which%20focuses%20on%20photorealism.">non-photorealistic rendering (NPR)</a> material definition</li>				<li>VRM extension: for humanoid avatar (humanoid bone structure, secondary animation, licenses)</li>				<li>base technology: data constraints requirements (scale, data type, local rotation, stance)</li>				<li>bare glTF 2.0 (.glb)</li>			</ul>			<p>For the general structure of glTF as a cluster of files, see description in <fddLink id="fdd000498">glTF_family</fddLink> and the figure showing component files from the <a href="https://github.com/KhronosGroup/glTF/tree/main/specification/2.0">glTF 2.0 specification</a>. The <a href="https://www.khronos.org/files/gltf20-reference-guide.pdf">glTF 2.0 Quick Reference Guide</a> provides a compact summary of glTF features. </p>			<p>VRM Documentation states the use of UniVRM to make VRM files with the following workflow:</p>			<ul>				<li>Import 3D data to Unity project.					<ul>						<li>Set up materials, make T-Pose model, enable model normalization.</li>					</ul>				</li>				<li>Export 3D model as VRM in Unity. </li>				<li>Import VRM file to Unity project.					<ul>						<li>Customize settings such as license, expressions, spring bone, etc.</li>						<li>To verify customized settings check model in play mode</li>					</ul>				</li>				<li>Export 3D model as VRM.</li>			</ul>			<p>				<b>Uses of VRM:</b>			</p>			<p>According to the <a href="https://vrm.dev/en/vrm/vrm_about.html#id3">VRM Documentation</a>, users can create their own avatar with a character maker in the VRM format, use that same VRM character to host a live stream, visit and hang out in a other avatar's live channel(s), start a VR game, explore and engage in a VR world, VRM model data can be used by any application that supports VRM. Using the VRM format based on the humanoid character and avatar, VRM Consortium wants to unify the differences from 3D model data and make handling 3D model easier on the applications side.  </p>		</fdd:description>		<fdd:shortDescription>VRM file format is for handling human-like 3D avatar (3D model) data for VR applications.  </fdd:shortDescription>		<fdd:productionPhase>Used across all production phases. VRM format is used to create 3D avatars (initial state), those 3D avatars can host, visit, and/or stream across VR worlds (middle state), and VRM format avatars are available for download for users to customize.</fdd:productionPhase>		<fdd:relationships>			<fdd:relationship>				<fdd:typeOfRelationship>Defined via</fdd:typeOfRelationship>				<fdd:relatedTo>					<fdd:id>fdd000500</fdd:id>					<fdd:shortName>glTF 2.0</fdd:shortName>					<fdd:titleName>glTF (GL Transmission Format) 2.0</fdd:titleName>				</fdd:relatedTo>			</fdd:relationship>			<fdd:relationship>				<fdd:typeOfRelationship>Contains</fdd:typeOfRelationship>				<fdd:relatedTo>					<fdd:id>fdd000381</fdd:id>					<fdd:shortName>JSON</fdd:shortName>					<fdd:titleName>JSON (JavaScript Object Notation) Data Interchange Format</fdd:titleName>				</fdd:relatedTo>				<fdd:comment>VRM 1.0 specification defined using documentation and JSON Schema.</fdd:comment>			</fdd:relationship>			<fdd:relationship>				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>				<fdd:relatedTo>					<fdd:id>fdd000153</fdd:id>					<fdd:shortName>PNG</fdd:shortName>					<fdd:titleName>PNG (Portable Network Graphics)</fdd:titleName>				</fdd:relatedTo>				<fdd:comment>Per <a href="https://vrm.dev/en/univrm/export/vrm_size.html#image">specification</a>, "Image contains Texture (referenced by Material) and Thumbnail (in VRM Meta). Those images are stored as PNG(JPG) bytes.</fdd:comment>			</fdd:relationship>			<fdd:relationship>				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>				<fdd:relatedTo>					<fdd:id>fdd000017</fdd:id>					<fdd:shortName>JPEG</fdd:shortName>					<fdd:titleName>	JPEG Image Encoding Family</fdd:titleName>				</fdd:relatedTo>				<fdd:comment>Per <a href="https://vrm.dev/en/univrm/export/vrm_size.html#image">specification</a>, "Image contains Texture (referenced by Material) and Thumbnail (in VRM Meta). Those images are stored as PNG(JPG) bytes."</fdd:comment>			</fdd:relationship>		</fdd:relationships>	</fdd:identificationAndDescription>	<fdd:localUse>		<fdd:experience>The Library of Congress has a small number of VRM files in its collections.</fdd:experience>		<fdd:preference>See the Recommended Formats Statement for the Library of Congress format preferences for <a href="https://www.loc.gov/preservation/resources/rfs/design3D.html">Design and 3D formats</a>.</fdd:preference>	</fdd:localUse>	<fdd:sustainabilityFactors>		<fdd:disclosure>			<p>VRM is an open-source, royalty-free format based on the 3D standard format glTF2.0.</p>		</fdd:disclosure>		<fdd:documentation>			<p>				<a href="https://vrm.dev/en/vrm1/index.html">VRM-1.0 Documentation</a> standard officially released September 2022.  </p>			<p>				<a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md">VRM 1.0 specification</a> defined using documentation and JSON Schema. </p>		</fdd:documentation>		<fdd:adoption>			<p>According to Sal Romano in <a href="https://www.gematsu.com/2022/07/rpg-maker-unite-details-3d-character-converter">RPG Maker Unite details 3D Character Converter</a>, July 2022, "since the recent advent of virtual reality games and VTubers, VRM character models have become extremely popular within the game creation community, and countless extraordinary 3D models have been born. Users can either use existing VRM models available on the internet, or convert their own custom VRM models for 2D game uses!" </p>			<p>				<a href="https://vrm.dev/en/univrm/index.html">VRM Documentation</a> provides users with a standard, open-source, C# implementation (<a href="https://github.com/vrm-c/UniVRM/releases">UniVRM</a>) that reads and writes VRM files for Unity, an editor platform for creating and operating 3D content.  </p>			<p>Platforms for 3D models that use VRM format include: <a href="https://seed.online/en">The Seed Online</a>, <a href="https://hub.vroid.com/en/">VRod Hub</a>, and <a href="https://cryptoavatars.io/">CyptoAvatars</a>.</p>			<p>Application Plug-ins that use VRM format include: <a href="https://vrm-addon-for-blender.info/en/">VRM Add-on for Blender</a>, and <a href="store.vket.com/ec/items/1066/detail/">VRM Converter for VRChat</a>.</p>			<p>				<a href="https://metaverse-standards.org/members/#msf_participant_members">VRM Consortium is Participant member</a> of the <a href="https://metaverse-standards.org/">Metaverse Standards Forum</a>, hosted by the <a href="https://www.khronos.org/">Khronos Group</a>, that provides "a venue for cooperation between standards organizations and companies to foster the development of interoperability standards for an open and inclusive metaverse." </p>			<p>Metaverse and gaming platforms that support VRM models include: <a href="https://webaverse.com/">Webaverse</a>, <a href="https://hello.vrchat.com/">VRChat</a>, <a href="https://monaverse.com/">Monaverse</a>, and <a href="https://somniumspace.com/">Somnium Space</a>.</p>		</fdd:adoption>		<fdd:licensingAndPatents>			<p>The VRM format has a <a href="https://vrm.dev/en/licenses/1.0/">VRM Public License 1.0</a>, a unique VRM license accounting for permissions for the personality of the avatar.  </p>			<p>				<a href="https://vrm.dev/en/vrm/vrm_meta.html">License settings for VRM</a> files include modification/redistribution rule for the avatar (configurable from Creative Commons, etc.) and <a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#permission--license-information">permissions</a> to use the avatar or perform various activities.  </p>			<p>				<a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</p>		</fdd:licensingAndPatents>		<fdd:transparency>			<p>Well defined. The VRM format is written against the glTF 2.0 spec where the glTF represents the entire scene and <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0/README.md#overview">VRM represents</a> the Humanoid for VR avatar. </p>			<p>The <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md#contents">VRM specification</a> describes the savable elements of glTF 2.0 data, the VRM JSON extension part of GLB, as well as the additional VRM extensions defining the model's bone mapping, model information, morph settings, first-person settings, and spring bone settings.  </p>			<p>See also <fddLink id="fdd000500">glTF 2.0</fddLink> and <fddLink id="fdd000381">JSON</fddLink>. </p>			<p>				<a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</p>		</fdd:transparency>		<fdd:selfDocumentation>			<p>Some descriptive metadata. The VRM format stores model information in the <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0/meta.md#vrmc_vrmmeta">VRMC_vrm.meta extension</a>. Required properties include name, authors, and licenseURL, with additional optional information about the use conditions of the model, including version, copyright, contact information, distributions, and avatar permissions. See <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/VRMC_vrm-1.0/meta.md#properties">VRM meta properties link</a> for full list with descriptions.</p>		</fdd:selfDocumentation>		<fdd:externalDependencies>			<p>None beyond availability of supporting software. VRM is cross-platform, the same avatar can be used in any application that supports the VRM format.</p>			<p>See notes for information about <a href="https://extra-ordinary.tv/2020/12/16/low-end-motion-capture-tools/">Capture Hardware for 3D movements</a>. </p>			<p>				<a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</p>		</fdd:externalDependencies>		<fdd:techProtection>			<p>None. <a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</p>		</fdd:techProtection>	</fdd:sustainabilityFactors>	<fdd:qualityAndFunctionalityFactors>		<fdd:otherQF>			<fdd:factor>				<fdd:tag>3D Model Geometry</fdd:tag>				<fdd:note>					<p>See <fddLink id="fdd000500">glTF 2.0.</fddLink>					</p>					<p>VRM extension <a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#meshannotations-jsonextensionsvrmfirstpersonmeshannotations">VRM.firstPerson.meshAnnotations</a> allows users to switch how the mesh is displayed, adjusting settings for auto, first-person, third-person, and/or both. </p>				</fdd:note>			</fdd:factor>			<fdd:factor>				<fdd:tag>3D Model Appearance</fdd:tag>				<fdd:note>					<p>See <fddLink id="fdd000500">glTF 2.0.</fddLink>					</p>					<p>VRM extension <a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#vrm-extension-extensionsvrmmaterialproperties">VRM.materialProperties</a> saves VRM unique material information and items necessary for Unity.  </p>				</fdd:note>			</fdd:factor>			<fdd:factor>				<fdd:tag>3D Model Scene</fdd:tag>				<fdd:note>					<p>See <fddLink id="fdd000500">glTF 2.0.</fddLink>					</p>					<p>						<a href="https://vrm.dev/en/univrm/shaders/index.html#material">VRM supports</a> three types of <a href="https://en.wikipedia.org/wiki/Shader">shaders</a>, unlit, standard, and MToon. Unlit and standard are supported by UniGLTF. <a href="https://vrm.dev/en/univrm/shaders/shader_mtoon.html#mtoon">MToon</a> is a VRM extension used for making anime expressions, mixing Lit Color and Shade Color based on defined parameters and lighting environment.</p>				</fdd:note>			</fdd:factor>			<fdd:factor>				<fdd:tag>3D Model Animation</fdd:tag>				<fdd:note>					<p>See <fddLink id="fdd000500">glTF 2.0.</fddLink>					</p>					<p>VRM extension <a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#vrm-extension-spring-bone-settings-jsonextensionsvrmsecondaryanimation">VRM.secondaryAnimation</a> sets the automatic animation of string-like objects, like tails and hair. Users can specify root bones and collider groups of swaying objects and collisions, including drapForce, gravityPower, and stiffness.  </p>					<p>						<a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#eye-control-settings">VRM.firstPerson.lookAtTypeName</a> extension controls the model's eyes based on the direction form the model's head to the target.  </p>				</fdd:note>			</fdd:factor>		</fdd:otherQF>	</fdd:qualityAndFunctionalityFactors>	<fdd:fileTypeSignifiers>		<fdd:signifiersGroup>			<fdd:filenameExtension>				<fdd:sigValues>					<fdd:sigValue>vrm</fdd:sigValue>				</fdd:sigValues>				<fdd:note>See <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md#file-extension">https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md#file-extension</a>.</fdd:note>			</fdd:filenameExtension>			<fdd:filenameExtension>				<fdd:sigValues>					<fdd:sigValue>glb</fdd:sigValue>				</fdd:sigValues>				<fdd:note>The .vrm extension is compatiable with .glb. Per <a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/0.0#file-extension">specification</a>, "if ModelFileName.vrm is changed to ModelFileName.glb, it can be loaded by GLTF-compatible applications (however, custom settings in VRM will not be shown)." See <a href="https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md#file-extension">https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md#file-extension</a>. See notes for more information.</fdd:note>			</fdd:filenameExtension>			<fdd:magicNumbers>				<fdd:sigValues>					<fdd:sigValue>HEX: 0x46546C67</fdd:sigValue>				</fdd:sigValues>				<fdd:note>For Binary glTF.  See specification and <a href="https://www.iana.org/assignments/media-types/model/gltf-binary">IANA registration</a>. No explicit information of VRM Magic Numbers found. <a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</fdd:note>			</fdd:magicNumbers>			<fdd:other>				<fdd:tag>Pronom PUID</fdd:tag>				<fdd:values>					<fdd:sigValueNA>See note.</fdd:sigValueNA>					<fdd:note>No Pronom PUID as of May 2023.</fdd:note>				</fdd:values>			</fdd:other>			<fdd:other>				<fdd:tag>Wikidata Title ID</fdd:tag>				<fdd:values>					<fdd:sigValueNA>See note.</fdd:sigValueNA>					<fdd:note>No Wikidata entry as of May 2023.	</fdd:note>				</fdd:values>			</fdd:other>		</fdd:signifiersGroup>	</fdd:fileTypeSignifiers>	<fdd:notes>		<fdd:general>			<p>				<a href="https://github.com/vrm-c/vrm-specification/tree/master/specification/VRMC_vrm-1.0#format-and-extension">VRM Format and Extension</a>: Saved in .glb format and using .vrm as the extension. </p>			<p>				<a href="https://extra-ordinary.tv/2020/12/16/low-end-motion-capture-tools/">Capture Hardware</a>: example hardware that can be used to capture 3D movements. </p>			<ul>				<li>Video file - some tools do processing offline, so users capture a video file first then load the video file for processing.</li>				<li>Leap Motion Capture / Ultraleap - a camera especially designed to capture hand positions.</li>				<li>Mocap (motion capture) body suits - contains various sensors to capture how your body moves – these are what profession movie studios use (e.g. rokoko.com). There are also special gloves users can often purchase separately to track individual finger positions.</li>				<li>VR equipment (e.g. Oculus or HTC Vive) - the headset, hand controllers, plus additional trackers users can attach to their waist and feet. This is in effect a poor man's mocap suit.</li>				<li>Webcam or external USB camera - several tools analyze the video from a webcam to spot key points on the face to track eye movements and facial expressions, some more modern experiences are doing full body position capture backed by AI techniques.</li>			</ul>		</fdd:general>		<fdd:history>			<p>				<a href="https://vrm-consortium.org/common/pdf/en_release.pdf">VRM Consortium</a> was established as a joint enterprise of 13 Japanese companies in February 2019 with the goal to develop the international virtual reality business with a focus on 3D avatars. The enterprise seeks to advocate for the VRM file format (based on glTF2.0) as the standard file format for 3D human models for virtual reality.</p>			<p>The participating companies range from those focused-on technology to those focused on virtual reality contents. VRM Consortium aims toward further breakthrough in AR/VR markets that utilize 3D avatars and continues to solicit full-members and supporting members in favor of the VRM format and the possibilities it stands for.</p>		</fdd:history>	</fdd:notes>	<fdd:formatSpecifications>		<fdd:urls>			<fdd:url>				<fdd:urlReference>					<link>https://vrm.dev/en/vrm1/index.html</link>					<tag>VRM-1.0 specification - VRM 1.0 specifications defined using documentation and JSON Schema </tag>				</fdd:urlReference>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://github.com/vrm-c/vrm-specification/tree/master/specification</link>					<tag>VRM specification - GitHub</tag>				</fdd:urlReference>			</fdd:url>		</fdd:urls>	</fdd:formatSpecifications>	<fdd:usefulReferences>		<fdd:urls>			<fdd:url>				<fdd:urlGroup>					<fdd:intro>VRM Consortium</fdd:intro>					<fdd:urlList>						<fdd:urlReference>							<link>https://vrm-consortium.org/en/</link>							<tag>VRM Consortium</tag>						</fdd:urlReference>						<fdd:urlReference>							<link>https://vrm-consortium.org/en/#method</link>							<tag>VRM Technical Specifications</tag>						</fdd:urlReference>					</fdd:urlList>				</fdd:urlGroup>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://vrm.dev/en/index.html</link>					<tag>VRM Documentation</tag>				</fdd:urlReference>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.md</link>					<tag>VRM Specification - GitHub</tag>				</fdd:urlReference>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://www.khronos.org/assets/uploads/developers/presentations/VRM-Extending-glTF-for-Portable-Humanoid-Avatars_SIGGRAPH-Asia_Nov19.pdf</link>					<tag>Khronos Group - VRM - Extending glTF for Portable Humanoid Avatars</tag>				</fdd:urlReference>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://vroid.pixiv.help/hc/en-us/articles/360020275314-How-to-edit-a-VRM-file-Can-I-re-edit-a-VRM-file-in-VRoid-Studio-#:~:text=If%20you%20wish%20to%20re,Unity%20(UniVRM)%20or%20Blender.&amp;text=VRM%20files%20are%20compatible%20with,3D%20software%20that%20supports%20glTF.</link>					<tag>VRoid - How to Edit a VRM file?</tag>				</fdd:urlReference>			</fdd:url>			<fdd:url>				<fdd:urlReference>					<link>https://medium.com/@HakanaiVR/an-unbiased-review-of-the-vrm-file-format-64d941d74409 </link>					<tag>An Unbiased Review of the VRM File Format</tag>				</fdd:urlReference>			</fdd:url>		</fdd:urls>	</fdd:usefulReferences></fdd:FDD>