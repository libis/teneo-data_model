<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000358" titleName="MusicXML File Format Family" shortName="MusicXML_family" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-2.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenreAndSubgenres>
				<fdd:gdfrGenre>sound</fdd:gdfrGenre>
				<fdd:gdfrSubgenres>
					<fdd:gdfrSubgenre>other</fdd:gdfrSubgenre>
				</fdd:gdfrSubgenres>
			</fdd:gdfrGenreAndSubgenres>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>text</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>
		<fdd:gdfrDomains>
			<fdd:gdfrDomain>
				<fdd:value>other</fdd:value>
				<fdd:comment>music notation</fdd:comment>
			</fdd:gdfrDomain>
		</fdd:gdfrDomains>
		<fdd:updates>
			<fdd:date>2024-05-08</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Full</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>MusicXML File Format Family</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>structured music formats</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>MusicXML is an XML-based format for representing Western musical notation with specifications available both as XML document type definitions (DTDs) and, since 2008, in W3C&apos;s XML Schema Language.  To quote from the DTDs, &quot;The MusicXML format is designed to represent musical scores, specifically common western musical notation from the 17th century onwards. It is designed as an interchange format for notation, analysis, retrieval, and performance applications. Therefore it is intended to be sufficient, not optimal, for these applications.&quot;  The last sentence emphasizes the objective of interoperability, through representation of features found in several applications, rather than an intention for MusicXML to be a superset of specialist features.  Consistent with the objective, MusicXML is widely used for interchange between different types of applications, such as <a href="https://en.wikipedia.org/wiki/Scorewriter">scorewriters</a> and music production systems.  New features have been added in updates to  MusicXML in response to new expectations of users of such systems.  The design of MusicXML was based on formats
for music notation developed before XML was available and also draws on basic features of <fddLink id="fdd000102">MIDI sequence data</fddLink> while expressing them in explicit and human-readable elements.  MusicXML represents the semantics of the underlying musical
data.  MusicXML can carry enough information to produce a printed score, but the format does not represent printed pages directly, in contrast to formats in the <fddLink id="fdd000030">PDF_family</fddLink>.</p>
			<p>MusicXML can represent scores either partwise (measures/bars within parts) or timewise (parts
within measures).  XSLT stylesheets that transform a partwise score to a timewise score or vice versa are distributed with the specification.  MusicXML has two different top-level DTDs, each with its own root element. In the partwise DTD, the root element is &lt;score-partwise&gt; and the part (for a particular instrument) is primary, with measures contained within each part. In the timewise DTD, the root element is &lt;score-timewise&gt; and the measure is primary, with musical parts for different instruments contained within each measure. A single XML Schema (score.xsd) within the specification for MusicXML includes both of the top-level document elements.  In addition, a MusicXML file with an &lt;opus&gt; root element can be used to combine like scores into a work, for example for movements in a symphony.</p>
			<p>The chronological development of MusicXML includes:</p>
			<ul>
				<li>
					<b>MusicXML 1.0</b> (January 2004)</li>
				<li>
					<b>MusicXML 1.1</b> (May 2005):  Added many new features for music formatting, to include full information about how notes, symbols, measures, staves, systems, credits, and pages appear in a printed score. See <a href="https://web.archive.org/web/20051025171114/http://www.musicxml.org/xml.html">2005 view of http://www.musicxml.org/xml.html</a> (via Internet Archive).</li>
				<li>
					<b>MusicXML 2.0</b> (June 2007):  Added features to make the MusicXML format better suited for distributing interactive sheet music online, in particular, added support for compressed MusicXML files, using a ZIP-based container.  See <a href="https://web.archive.org/web/20070927134757/http://www.musicxml.org:80/xml.html">2007 view of http://www.musicxml.org/xml.html</a> (via Internet Archive). A W3C XML Schema (XSD) definition was released in 2008 for version 2.0.</li>
				<li>
					<b>MusicXML 3.0</b> (August 2011):  See <fddLink id="fdd000503">MusicXML_3_0</fddLink> for changes.</li>
				<li>
					<b>MusicXML 3.1</b> (December 2017):  See <fddLink id="fdd000499">MusicXML_3_1</fddLink>Â for changes.</li>
			</ul>
			<p>See <a href="https://www.musicxml.com/for-developers/version-history/">MusicXML Version History</a> for detailed lists of changes between versions.  Files complying with specifications for MusicXML 1.0, 1.1, 2.0, and 3.0 are also valid MusicXML 3.1 files.</p>
			<p>Since MusicXML files are often large in comparison to the native binary formats used by score-writing software, they are often distributed as ZIP files, using Deflate compression and .mxl as the file extension.  This compressed format was introduced with MusicXML 2.0  See <fddLink id="fdd000354">ZIP_PK</fddLink> for information about ZIP in general.</p>
		</fdd:description>
		<fdd:shortDescription>An XML-based format for representing Western musical notation.  Represents the semantics of the underlying musical data, designed as an interchange format for music notation, analysis, retrieval, and performance applications.</fdd:shortDescription>
		<fdd:productionPhase>Typically an exchange (middle-state) format.  MusicXML files can be used to derive display files via applications that support composition or utilities to view or print scores.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Defined via</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000076</fdd:id>
					<fdd:shortName>XML_DTD</fdd:shortName>
					<fdd:titleName>XML Document Type Definition</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Defined via</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000077</fdd:id>
					<fdd:shortName>XML_Schema_1_0</fdd:shortName>
					<fdd:titleName>W3C XML Schema Language</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:comment>Versions 1 and 2 of MusicXML, not described separately on this website.  Scores compliant with versions 1 and 2 are also valid version 3 files.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000503</fdd:id>
					<fdd:shortName>MusicXML_3_0</fdd:shortName>
					<fdd:titleName>MusicXML, Version 3.0</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000499</fdd:id>
					<fdd:shortName>MusicXML_3_1</fdd:shortName>
					<fdd:titleName>MusicXML, Version 3.1</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:shortName>MusicXML_4</fdd:shortName>
					<fdd:titleName>MusicXML, Version 4</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Not separately described at this time. See W3C <a href="https://www.w3.org/2021/06/musicxml40/">Version 4.0
Final Community Group Report 1 June 2021</a> for more information.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:shortName>MusicXML_4_1</fdd:shortName>
					<fdd:titleName>MusicXML, Version 4_1</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Not separately described at this time. See W3C <a href="https://w3c.github.io/musicxml/">MusicXML
Version 4.1
Draft Community Group Specification 15 May 2024</a> for more information.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Affinity to</fdd:typeOfRelationship>
				<fdd:comment>In addition to the straightforward XML version, a compressed form of MusicXML has been defined, based on the ZIP format, and using the .mxl file extension.  Compressed MusicXML is not currently described separately on this website.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Affinity to</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000631</fdd:id>
					<fdd:shortName>MUSX</fdd:shortName>
					<fdd:titleName>Finale Music Notation File (2014+)</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>MUSX files can be exported to MusicXML files for improved interoperability.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Affinity to</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000632</fdd:id>
					<fdd:shortName>MUS</fdd:shortName>
					<fdd:titleName>Finale Legacy Music Notation File</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>MUS files can be exported to MusicXML files for improved interoperability.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>The Library of Congress has a small number of MusicXML files from collections in its Music Division.</fdd:experience>
		<fdd:preference>For works acquired for its collections, the Library of Congress Recommended Formats Statement indicates that MusicXML is a preferred format for <a href="http://www.loc.gov/preservation/resources/rfs/musical-scores.html">Musical Scores - Digital</a>.</fdd:preference>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>Fully, openly documented through XML document type definitions (DTDs) and a specification in the W3C XML Schema language. Originally developed by Michael Good of Recordare LLC.  Recordare was acquired by MakeMusic, Inc. in late 2011.  Make Music made specifications through version 3.0 freely available for use.  Since July 2015, the MusicXML specification has been developed and maintained by the <a href="https://www.w3.org/community/music-notation/">W3C Music Notation Community Group</a>. See <i>Licensing and Patents</i> below.</fdd:disclosure>
		<fdd:documentation>
			<p>The specifications for all versions of MusicXML,  are available via <a href="https://www.musicxml.com/for-developers/">https://www.musicxml.com/for-developers/</a> or <a href="https://github.com/w3c/musicxml/releases">https://github.com/w3c/musicxml/releases</a>. A single zipped file is available for each version, including all the component DTDs and schema (.xsd) files.</p>
			<p>A <a href="http://usermanuals.musicxml.com/MusicXML/MusicXML.htm">manual for MusicXML 3.0</a> is available; this includes a complete tag library based on the W3C XML Schema files.  An introduction to MusicXML 3.1 is at <a href="http://w3c.github.io/musicxml/">http://w3c.github.io/musicxml/</a> as MusicXML
Version 3.1,
Final Community Group Report (07 December 2017).</p>
			<p>Extensive <a href="https://www.musicxml.com/tutorial/">tutorials</a> on the MusicXML website support the specification.</p>
		</fdd:documentation>
		<fdd:adoption>
			<p>MusicXML is widely used for interchange between different types of applications, such as <a href="https://en.wikipedia.org/wiki/Scorewriter">scorewriters</a> and music production systems.  In February 2019, the <a href="http://en.wikipedia.org/wiki/MusicXML">Wikipedia page for MusicXML</a> was updated to say that over 240 music notation programs supported MusicXML to some degree, including most scorewriting programs, most music OCR programs, and some music sequencing programs.  To quote from <a href="https://musescore.org/en">MuseScore.org</a> in May 2019: &quot;MusicXML is the universal standard for sheet music. It is the recommended format for sharing sheet music between different scorewriters, including MuseScore, Sibelius, Finale, and more than 100 others.&quot;  Similarly the Music Notation Project, with an interest in alternative notations for music, particularly those that might be easier to learn than the traditional &quot;diatonic&quot; staff, states in relation to its <a href="http://musicnotation.org/software/open-source-strategy/">open source software strategy</a>, &quot;There has finally emerged a successful standard interchange file format for music notation called MusicXML. MusicXML files can be read or written by a large number of music applications that run on a wide variety of computer platforms, including the two most popular commercial music notation applications, Finale and Sibelius.&quot;  Free Dolet plugins for Finale and Sibelius extend built-in MusicXML capabilities for faster and higher quality transfers between the two applications, including batch conversion to MusicXML.</p>
			<p>Software applications that can read or write MusicXML are listed at <a href="https://www.musicxml.com/software/">https://www.musicxml.com/software/</a>. On May 3, 2019, the list had 245 entries.  Wikipedia&apos;s <a href="https://en.wikipedia.org/wiki/Comparison_of_scorewriters">Comparison of Scorewriters</a> shows that most of the applications listed can read and/or write MusicXML.  Not all applications support all features of the format.  Hence, round-trip import and export should not be expected in all situations.</p>
			<p>Libmusicxml is an <a href="http://libmusicxml.sourceforge.net/">open source software library</a> in C++ that facilitates MusicXML support in other applications.  The software is based on work originating at the Grame Centre National de CrÃ©ation Musicale (in Lyon, France).  See <a href="https://github.com/grame-cncm/libmusicxml">https://github.com/grame-cncm/libmusicxml</a>.  See also <a href="https://github.com/grame-cncm/libmusicxml/blob/lilypond/doc/lilypond/libmusicxmlArchitecture.pdf">libmusicxml2 Architecture OverView</a> which incorporates MusicXML in a planned architecture for conversion to other openly published notation formats.  <a href="https://opensheetmusicdisplay.org/">OpenSheetMusicDisplay</a> is an open source JavaScript engine for MusicXML. This allows MusicXML rendering in the browser using HTML5, JavaScript, and SVG.  See <a href="https://opensheetmusicdisplay.github.io/demo/">demo</a> based on OpenSheetMusicDisplay.</p>
			<p>
				<a href="https://www.musicxml.com/music-in-musicxml/">Music in MusicXML</a>  is a selected listing of sites from which sheet music can be downloaded in MusicXML or compatible formats.</p>
		</fdd:adoption>
		<fdd:licensingAndPatents>
			<p>The XML-based specifications for versions of MusicXML through 3.0 and associated distributed files can be freely used under a <i>Public License</i>.  The license for MusicXML 3.0 from MakeMusic was available from <a href="https://web.archive.org/web/20131213221829/http://www.musicxml.com/for-developers/public-license-3-0/">http://www.musicxml.com/for-developers/public-license-3-0/</a> (as of 2013, link via Internet Archive).  This license (or equivalent for earlier versions) is included in the distribution package for MusicXML versions through 3.0.  Changes to the distributed schemas, etc. need to be acknowledged.  To quote from <a href="https://web.archive.org/web/20130928195322/http://www.musicxml.com/tutorial/faq/">https://www.musicxml.com/tutorial/faq/</a> (as of 2013, link via Internet Archive): &quot;The MusicXML DTDs and XSDs are available under a royalty-free license from MakeMusic. This license is modeled on those from the World Wide Web Consortium (W3C). If you follow the terms of the license, you do not need to pay anyone to use MusicXML in your products or research. MakeMusic has no patents issued or pending for the MusicXML DTDs and XSDs.&quot;</p>
			<p>The MusicXML DTD and XSD files for Version 3.1 are freely redistributable under the W3C Community Final Specification Agreement.  See <a href="https://www.w3.org/community/about/agreements/fsa-deed/">W3C Community Final Specification Agreement (FSA) Deed</a>.  This agreement incorporates commitments made by participants in the community group, using the <a href="https://www.w3.org/community/about/agreements/cla/">W3C Community Contributor License Agreement (CLA)</a>.</p>
		</fdd:licensingAndPatents>
		<fdd:transparency>Transparent to a human reader or with a text editor. Â Comprised entirely of XML with element names consisting of familiar musical terms, such as note, duration, and pitch. MusicXML markup can be viewed and edited by a wide-range of generic tools for XML. Â However, like many other XML-based formats, MusicXML files are typically large and verbose and require domain-specific expertise to interpret. Â See <a href="http://wiki.dpconline.org/images/0/0e/XML_Assessment_v1.3.pdf">XML Format Preservation Assessment</a> from the British Library Preservation Team.</fdd:transparency>
		<fdd:selfDocumentation>
			<p>The MusicXML DTD and schema include an <i>Identification</i> element, which can contain elements in use in headers in the MuseData format and borrowed from Dublin Core. Explicit elements are <i>Creator</i>, <i>Rights</i>, (with several sub-elements), <i>Source</i>, <i>Relation</i> (optionally used to describe words, arrangement, etc.).  A <i>Miscellaneous</i> element can hold any other descriptive metadata that applies to the score as a whole.  In addition, the contents of the &lt;credit&gt; element contains text used to display or print credit information on a score, including identification of title, sub-title, composer, arranger, etc.  Identification elements are permitted at both the score and score-part levels.</p>
			<p>
				<b>Accessibility Features</b>
			</p>
			<p>According to W3C's <a href="https://www.w3.org/TR/xag/">XML Accessibility Guidelines</a>, XML-based formats can include features that promote accessibility depending on implementation. This document outlines some techniques to achieve this such as ensure all semantics are captured in markup in a repurposable form (2.2), separate presentation properties using stylesheet technology/styling mechanisms (2.2), use the standard XML linking and pointing mechanisms (XLink and XPointer) (2.3), define element types that allow classification and grouping (header, section, list, etc) (2.4), define navigable structures that allow discrete, sequential, structured, and search navigation functionalities (3.2) and more. Overall, XML-based formats have good accessibility capacity.</p>
			<p>For MusicXML specifically, there are tools such as the open source <a href="https://musescore.org/en/download">MuseScore</a> that can use the MusicXML files to "present score excerpts, musical examples, and even exercises to students via screen readers" for people with visual impairments, as noted by <a href="https://digitalstrategy.unt.edu/clear/teaching-resources/accessibility/music-accessibility/screen-reader-integration-notation-software.html">UNT's Screen Reader Integration with Notation Software</a> resource. <a href="../contact_format.shtml">Comments welcome</a>. </p>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>None beyond software that can render MusicXML files for display and editing, for example, music notation (scorewriter) programs.  For a discussion of software support needs for MusicXML, see clause 2.4 in the <a href="http://wiki.dpconline.org/images/2/24/MusicXML_Format_Assessment_v1.pdf">MusicXML Format Preservation Assessment</a> from the British Library Digital Preservation Team.</fdd:externalDependencies>
		<fdd:techProtection>The MusicXML specification includes no internal support for encryption or other technical protection.</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:soundQF>
			<fdd:normalSound>This format does not render sound.</fdd:normalSound>
			<fdd:beyondSound>Does not render sound or audio bitstreams but instead stores the visual representation of a musical score. </fdd:beyondSound>
		</fdd:soundQF>
		<fdd:textQF>
			<fdd:normalText>Although not strictly a format for text, formats for notated music share distinctions in functionality that are common with text.  A MusicXML instance can be used to display a score that can be viewed and printed.  Words (such as lyrics and credits) can be searched by text-indexing software.</fdd:normalText>
			<fdd:structure>MusicXML represents the semantic structure of a score: key; measures (bars); notes with pitch and duration; musical parts for different instruments; lyrics/words, etc.</fdd:structure>
			<fdd:layout>MusicXML does not specify a precise layout with page-breaks, etc.  It does represent layout semantics that are important to the display of scores, such as: whether directions should go above or below a staff; spacing for staves; and scaling of features relative to a single measure that can be adjusted to fit a particular pagesize.</fdd:layout>
			<fdd:mathDiag>Musical scores do not include mathematical or chemical formulae.  Hence this functionality factor is not relevant for music notation formats.</fdd:mathDiag>
			<fdd:beyondText>MusicXML is designed to represent the semantics of music notation and characteristics for its display and performance.</fdd:beyondText>
		</fdd:textQF>
		<fdd:otherQF>
			<fdd:factor>
				<fdd:tag>Music Notation Components: Attributes (Staves, Clef, Time)</fdd:tag>
				<fdd:note>All supported. See <a href="https://www.w3.org/2021/06/musicxml40/tutorial/notation-basics/">Notation Basics in MusicXML</a>Â in W3C MusicXML 4.0 community resources.</fdd:note>
			</fdd:factor>
			<fdd:factor>
				<fdd:tag>Music Notation Components: Musical Directions</fdd:tag>
				<fdd:note>All supported. </fdd:note>
			</fdd:factor>
			<fdd:factor>
				<fdd:tag>Music Notation Components: Note Appearance (Tuplet, Stems, Beams, Accidentals, Notations)</fdd:tag>
				<fdd:note>All supported.</fdd:note>
			</fdd:factor>
			<fdd:factor>
				<fdd:tag>Music Notation Components: Multi-Part Music</fdd:tag>
				<fdd:note>All supported. </fdd:note>
			</fdd:factor>
		</fdd:otherQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>xml</fdd:sigValue>
					<fdd:sigValue>musicxml</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>An uncompressed MusicXML file is an XML file and the .xml extension was always used for versions though MusicXML 3.0.  The .musicxml extension was introduced with <fddLink id="fdd000499">MusicXML_3_1</fddLink> in 2017.  In practice, the .xml extension is also still in use.  Compressed MusicXML files use the .mxl extension.</fdd:note>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/vnd.recordare.musicxml+xml</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>See IANA <a href="http://www.iana.org/assignments/media-types/application/vnd.recordare.musicxml+xml">registration for uncompressed MusicXML</a>.  For compressed MusicXML files, the media type <i>application/vnd.recordare.musicxml</i> is used.</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValueNA>See note.</fdd:sigValueNA>
				<fdd:note>No magic number is specified in the IANA registration.  PRONOM  recognizes as MusicXML files that begin with <i>&lt;?xml version=&quot;1.0&quot;</i> followed within 256 bytes the string <i>http://www.musicxml.org/dtds/</i> (from the DOCTYPE declaration). Note that case may not be significant in these strings.</fdd:note>
			</fdd:magicNumbers>
			<fdd:other>
				<fdd:tag>Indicator for profile, level, version, etc.</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>The version of MusicXML used in a document is found in the version attribute in the root element (&lt;score-partwise&gt;, &lt;score-timewise&gt;, or &lt;opus&gt;).  For example, for MusicXML 3.1, the value should be &quot;3.1&quot;.  A document with no version attribute in the root element is assumed to be in MusicXML version 1.0.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>XML DOCTYPE declaration</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>For MusicXML the DOCTYPE declaration for a document should include the string <i>PUBLIC &quot;-//Recordare//DTD MusicXML </i> followed by the version number.  The exact form of the declaration depends on whether the root element is &lt;score-partwise&gt;, &lt;score-timewise&gt;, or &lt;opus&gt;.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Other</fdd:tag>
				<fdd:values>
					<fdd:sigValueNA>See note.</fdd:sigValueNA>
					<fdd:note>NARA File Format Preservation Plan ID has no corresponding entry as of September 2024.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Pronom PUID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>fmt/896</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>PRONOM does not distinguish between versions of MusicXML.  See <a href="http://www.nationalarchives.gov.uk/PRONOM/fmt/896">http://www.nationalarchives.gov.uk/PRONOM/fmt/896</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Q653301</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>Applies to all versions of MusicXML.  See <a href="https://www.wikidata.org/wiki/Q653301">https://www.wikidata.org/wiki/Q653301</a>.</fdd:note>
				</fdd:values>
			</fdd:other>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>MusicXML was designed for sharing sheet music files between applications, and for archiving them for use in the future. MusicXML complements the native file formats used by Finale, Sibelius, and other music composition programs, which are designed for rapid, interactive use. The design of MusicXML was based on two earlier academic music formats
for music notation, MuseData and Humdrum, and has deliberate commonalities with MIDI where appropriate. A useful comparison of music notation formats is <a href="https://web.archive.org/web/20160320031715/http://www.glyndwr.ac.uk/cunninghams/research/scunningham_msc.pdf">Music File Formats and Project XEMO</a>, a Master&apos;s thesis by Stuart Cunningham.</p>
		</fdd:general>
		<fdd:history>
			<p>The MusicXML format was originally developed by Michael Good, principal of Recordare, LLC, with Version 1.0 released in January 2004.  Michael Good moved to MakeMusic, Inc. in late 2011, and copyright in the specifications through MusicXML 3.0 was transferred to MakeMusic, Inc. According to a <a href="https://www.scoringnotes.com/news/makemusic-and-steinberg-transfer-development-of-musicxml-and-smufl-to-web-community-group/">2015 post</a> from Scoring Notes, MakeMusic and Steinberg transferred development of MusicXML and SMuFL, respectively, to the <a href="https://www.w3.org/community/music-notation/">W3C Music Notation Community Group</a> on July 28, 2015.  Michael Good is a co-chair of the group. The version history for MusicXML is documented at <a href="https://www.musicxml.com/for-developers/version-history/">https://www.musicxml.com/for-developers/version-history/</a>.</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.musicxml.com/for-developers/</link>
					<tag>MusicXML Specification
</tag>
					<comment>Provides links to schemas and DTDs for all versions of MusicXML.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://github.com/w3c/musicxml/releases</link>
					<tag>MusicXML releases page on GitHub</tag>
					<comment>GitHub menu for ZIP files with schemas and DTDs for all versions of MusicXML.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.musicxml.com/</link>
					<tag>Home page for the MusicXML format</tag>
					<comment>Part of MakeMusic.  Links to specifications, FAQ, tutorials, publications, etc.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.w3.org/community/music-notation/</link>
					<tag>Home page for the W3C Music Notation Community Group</tag>
					<comment>Responsible for MusicXML 3.1 and any future developments.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.118.5431</link>
					<tag>MusicXML: An Internet-Friendly Format for Sheet Music | by Michael Good (2001)</tag>
					<comment>A paper from the 2001 XML Conference hosted by IDEAlliance.  The paper is no longer available on the IDEAlliance website.  [This version states that it was rendered by www.RenderX.com.]</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://wpmedia.musicxml.com/wp-content/uploads/2012/11/xml2001-talk.pdf</link>
					<tag>MusicXML: An Internet-Friendly Format for Sheet Music [presentation]</tag>
					<comment>2001 presentation based on paper cited above.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://en.wikipedia.org/wiki/MusicXML</link>
					<tag>MusicXML page on Wikipedia</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://web.archive.org/web/20160320031715/http://www.glyndwr.ac.uk/cunninghams/research/scunningham_msc.pdf</link>
					<tag>Music File Formats and Project XEMO | by Stuart Cunningham, 2003.  </tag>
					<comment>Thesis for MSc in Multimedia Communications.  Thorough comparison of MusicXML, NIFF (Notation Interchange File Format) and MIDI formats.  Link now via Internet Archive.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://michaelgood.info/category/musicxml/</link>
					<tag>Blog by MusicXML developer, Michael Good.</tag>
					<comment>Link is to postings related to MusicXML</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://wiki.dpconline.org/images/2/24/MusicXML_Format_Assessment_v1.pdf</link>
					<tag>MusicXML Format Preservation Assessment (September 2018) | from British Library Digital Preservation Team</tag>
					<comment>Although this assessment covers all versions of MusicXML, its focus is on MusicXML 3.0.  Has extensive list of references.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://wiki.dpconline.org/images/0/0e/XML_Assessment_v1.3.pdf</link>
					<tag>XML Format Preservation Assessment (September 2015) | from British Library Digital Preservation Team</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://musescore.org/en/handbook/file-formats</link>
					<tag>File format information from MuseScore</tag>
					<comment>An annotated list of music formats, with brief descriptions of associated functionality.  </comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>Internet media types (MIME-types) were registered with IANA in 2007.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>http://www.iana.org/assignments/media-types/application/vnd.recordare.musicxml+xml</link>
							<tag>Registration of application/vnd.recordare.musicxml+xml for uncompressed MusicXML</tag>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>http://www.iana.org/assignments/media-types/application/vnd.recordare.musicxml</link>
							<tag>Registration of application/vnd.recordare.musicxml for compressed MusicXML</tag>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.nationalarchives.gov.uk/PRONOM/fmt/896</link>
					<tag>PRONOM entry for fmt/896</tag>
					<comment>Information in PRONOM from UK National Archives about MusicXML. Applies to all versions of MusicXML. PUID: fmt/896.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.wikidata.org/wiki/Q653301</link>
					<tag>Wikidata entry for Q653301</tag>
					<comment>Information in Wikidata about MusicXML. Applies to all versions of MusicXML.  Wikidata Title ID: Q653301</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
