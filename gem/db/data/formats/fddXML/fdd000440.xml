<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000440" titleName="MAT-File Level 5 File Format" shortName="MAT-file_5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-1.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>dataset</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>
		<fdd:updates>
			<fdd:date>2015-12-16</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Preliminary</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>MAT-File Level 5 File Format (v5, v6, v7)</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>numeric data formats</fdd:keyword>
			<fdd:keyword>scientific data formats</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>A Level 5 MAT-File is an openly documented, but proprietary, binary data container format used by MATLAB software from <a href="http://www.mathworks.com">MathWorks</a>.  MATLAB is a fourth-generation programming language that allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages.  It was first released in 1984; a version of MAT-file has been documented since at least 1999.  The naming of the MAT-File format versions is somewhat confusing.  One distinction is by &quot;Level.&quot; Level 4 and Level 5 files have completely different technical structures.  While continuing to use the same general structure, new format versions have been introduced to support new capabilities.  For example, data compression and Unicode support were added in v7, but using the same Level 5 format structure.  When using MATLAB software, the user's choice is by format version/type, not by level.  As of December 2015, the latest version is v7.3. See <a href="http://www.mathworks.com/help/matlab/import_export/mat-file-versions.html">MAT-File Versions</a>  for the explanation of different MAT-file format versions from MATLAB documentation. This page says, &quot;Version 7.3 MAT-files use an <fddLink id="fdd000229">HDF5</fddLink> based format.&quot;  Experimentation with MATLAB 2015a (see <a href="#notes">Notes</a> below) and <a href="http://www.mathworks.com/matlabcentral/answers/94570-why-does-my-mat-file-header-summary-include-the-matlab-5-0-mat-file-header-message-when-i-try-to">a Q&amp;A in a user support forum</a> indicate that headers for versions 5-7 as produced by MATLAB display &quot;MATLAB 5.0 MAT-file&quot; whereas version 7.3 files show &quot;MATLAB 7.3 MAT-file&quot;.  No public specification for version 7.3 MAT-files has been found by the compilers of this resource; the <a href="https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf">MAT-File format</a> specification for Levels 4 and 5 makes no mention of HDF5.  <a href="../contact_format.shtml">Comments welcome</a>.  See <a href="#useful">Useful references</a> below for more information about compatibility of 7.3 MAT-files with HDF5 and comparison with earlier versions.</p>
			<p>Level 5 MAT-Files include support for multidimensional numeric arrays, character arrays, cell arrays, sparse arrays, objects, and structures.  In MATLAB, MAT-files can be created using the save function, which writes the arrays currently in memory to a file as a continuous byte stream.  MATLAB is a high-level language and interactive environment that enables you to perform computationally intensive tasks faster than with traditional programming languages.  MATLAB code is stored in separate files, typically with a &apos;.m&apos; extension.  See <a href="http://stackoverflow.com/questions/3947549/what-is-the-difference-between-m-and-mat-files-in-matlab">What is the difference between .m and .mat files in MATLAB</a>?</p>
			<p>Level 5 MAT-files are made up of a 128-byte
header
followed by one or more
data
<i>elements</i>. This use of the term &apos;element&apos; should not be confused with the way the term is used in XML-based format specifications.   Each array is a data element, as are some other MATLAB constructs.  Each data element is composed of an 8-byte
tag
followed by the data in the
element.  The tag specifies the number of bytes in the data element and how these bytes
should be interpreted; that is, should the bytes be read as 16-bit values, 32-bit values,
floating-point values or some other data type.</p>
		</fdd:description>
		<fdd:shortDescription>Binary data container format used by MATLAB; may include arrays, variables, functions, and other types of data.  </fdd:shortDescription>
		<fdd:productionPhase/>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has earlier version</fdd:typeOfRelationship>
				<fdd:comment>
					<p>Level 4 MAT-File, not described separately in this resource. Supports only two-dimensional matrices and character strings.  No longer offered as a Save option in recent MATLAB software releases.</p>
				</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has later version</fdd:typeOfRelationship>
				<fdd:comment>MAT-File 7.3, not described separately in this resource.  Based on <fddLink id="fdd000229">HDF5</fddLink>, but with undocumented special conventions.  See <a href="#useful">Useful references</a> below.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>Library of Congress staff performing image analysis associated with quality control for scanning make use of MATLAB software.</fdd:experience>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>Developed by MathWorks as a proprietary format for use with MATLAB software.  Level 4 and later Level 5 variants have been openly documented since 1999.  </fdd:disclosure>
		<fdd:documentation>
			<a href="https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf">MATLABÂ® MAT-File format</a>, from MathWorks.  Has specification for Level 4 and Level 5 variants.</fdd:documentation>
		<fdd:adoption>
			<p>
				<a href="http://www.mathworks.com/help/matlab/programming-interfaces-for-c-c-fortran-com.html">MATLAB API for Other Languages</a>, from MathWorks, lists APIs that support interaction with the MATLAB application, MAT-Files, and MATLAB data types.  The MAT-File API (also called the MAT-File Interface library) is available for Fortran and for C/C++.</p>
			<p>The following software libraries or applications for numerical computation can read or write Level 5 MAT-files:	<a href="http://www.wolfram.com/mathematica/">Mathematica</a>, see <a href="https://reference.wolfram.com/language/ref/format/MAT.html">Wolfram Language</a>; <a href="http://www.maplesoft.com/support/help/maple/view.aspx?path=Formats%2FMAT">Maple</a>;
<a href="https://www.lumerical.com/">Lumerical</a>, see <a href="https://kb.lumerical.com/en/ref_scripts_tutorial_matlab_mat.html">mat files</a>;
<a href="http://totalcmd.net/plugring/matlabwcx.html">MATLAB MAT-file Viewer</a>;
<a href="https://www.gnu.org/software/octave/">GNU Octave</a>, an open source package, see <a href="https://www.gnu.org/software/octave/doc/interpreter/Simple-File-I_002fO.html#Simple-File-I_002fO">Simple File I/O</a>;  	<a href="http://numerics.mathdotnet.com/MatlabFiles.html">Math.NET Numerics</a>, part of an open-source initiative.</p>
			<p>Application areas in which MATLAB is widely used include: chemical engineering, bio-engineering, signal processing (including for images), medical image analysis, quantitative finance, pattern recognition.  However, sharing and interchange of data in these fields is much less common than the sharing of MATLAB program code.</p>
			<p>Generic data archives do not tend to list MAT-File as a supported format.  The ETH-Bibliothek Digital Curation unit (at a university in Switzerland) mentions *.mat files in its <a href="http://www.library.ethz.ch/File-formats-for-archiving">File Formats for Archiving</a> recommendations, encouraging conversion to HDF5 or storing as MAT-File 7.3 for HDF5 compatibility before submission to the ETH Data Archive.  However, see <a href="#useful">Useful references</a> below for references that question the compatibility.</p>
			<p>A few research communities use MAT-Files to store and share data.  For example, the Max Planck Institute for Psycholinguistics hosts an <a href="https://tla.mpi.nl/">archive of language-related data</a> that accepts MATLAB files for Neurobiology of Language data; see <a href="http://www.mpi.nl/corpus/html/lamus/apa.html">Accepted file types and formats</a>.</p>
		</fdd:adoption>
		<fdd:licensingAndPatents>
			<p>There are patents associated with the MATLAB software, but MathWorks encourages use of files in the MAT-File format through the <a href="http://www.mathworks.com/help/matlab/apiref/matfileapi.html">MAT-File interface library</a> it supplies, and states, &quot;However, if you need to read or write MAT-files on a system that does not support the
MAT-file interface, you must write your own read and write routines.&quot;</p>
		</fdd:licensingAndPatents>
		<fdd:transparency>The MAT-File format is not transparent.  In addition to storing data in binary form, the array data elements that hold the actual data are often compressed to save space.  See <a href="#notes">Notes on Performance vs. Transparency</a> for discussion of the disadvantages of XML for data used with MATLAB for image analysis.</fdd:transparency>
		<fdd:selfDocumentation>A MAT-File is self-describing from a technical perspective, allowing an application that understands the format to interpret the structure and contents without supplementary information.  The array data elements that hold the actual data values (numeric or character) are named.  MAT-Files offer no support for embedding descriptive metadata or describing semantics and provenance for the variables and arrays in the file.</fdd:selfDocumentation>
		<fdd:externalDependencies>No dependencies beyond software that can read MAT-Files.</fdd:externalDependencies>
		<fdd:techProtection>None</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:datasetQF>
			<fdd:normalDataset>
				<p>The MAT-file format supports many data types including signed and
unsigned, 8-bit, 16-bit, 32-bit, and 64-bit data types, a special data type that represents
MATLAB arrays, Unicode-encoded character data, and data stored in compressed
format.  Floating point numbers in IEEE 754 single- and double-precision are also supported.</p>
			</fdd:normalDataset>
			<fdd:accessSoftware>
				<p>MathWorks supplies a number of APIs for various programming languages.  The <a href="http://www.mathworks.com/help/matlab/apiref/matfileapi.html">MATFile (C and Fortran)</a> interface library provides routines for reading and writing MAT-files.  In addition, <a href="http://www.mathworks.com/help/matlab/programming-interfaces-for-c-c-fortran-com.html">MATLAB API for Other Languages</a> lists a number of APIs that support interaction with the MATLAB application and MATLAB data types.</p>
			</fdd:accessSoftware>
			<fdd:dataDocumentation>No support for embedding descriptive or administrative metadata.</fdd:dataDocumentation>
			<fdd:beyondDataset>Support for complex numbers, sparse matrices, and nested data structures.</fdd:beyondDataset>
		</fdd:datasetQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>mat</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From the Level 5 MAT-File specification.</fdd:note>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/x-matlab-data</fdd:sigValue>
					<fdd:sigValue>application/matlab-mat</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From <a href="https://github.com/digipres/digipres.github.io/blob/master/_sources/registries/tika/tika-mimetypes.xml#L5736">Apache TIKA</a>.</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValues>
					<fdd:sigValue>Hex: 4D 41 54 4C 41 42 20 35 2E 30 20 4D 41 54 2D 66 69 6C 65 2C 20 50 6C 61 74 66 6F 72 6D 3A 20</fdd:sigValue>
					<fdd:sigValue>ASCII: MATLAB 5.0 MAT-file, Platform:</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From the Level 5 MAT-File specification.</fdd:note>
			</fdd:magicNumbers>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>
				<b>Headers for MAT-files: </b>  Although the bulk of the file is in binary form, the header of a Level 5 MAT-File can be read with a text editor.  This is also true of a version 7.3 file.  Headers from a file saved as <i>v6</i>, <i>v7</i>, and <i>v7.3</i> in MATLAB (2015a) are shown below preceded by the version in [].  Note that the headers for v6 and v7 files have the same &quot;5.0&quot; identification. Both are Level 5 MAT-Files.</p>
			<ul>
				<li>[v6] MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Thu Dec 17 15:48:57 2015                                         IM</li>
				<li>[v7] MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Thu Dec 17 15:52:10 2015                                         IM</li>
				<li>[v7.3] MATLAB 7.3 MAT-file, Platform: PCWIN64, Created on: Thu Dec 17 15:48:12 2015 HDF5 schema 1.00 .                      IM</li>
			</ul>
			<p>Level 4 MAT-files have no magic number.  They have a 20-byte fixed-length header, beginning with a 4-digit integer that indicates how the data is stored.</p>
			<p>
				<b>Byte order in MAT-Files</b>The Level 5 specification describes MAT-files from a big-endian perspective. The associated
figures also reflect MAT-files written by a big-endian system. In MAT-files written by a little-endian system, the order of bytes within each instance of a MAT-file data type is
reversed.  The file header has an &quot;endian indicator&quot; as the last two bytes of the 128-byte header.  The indicator comprises the two characters,
M
and
I, written to the MAT-file in this
order, as a 16-bit value. If, when read from the MAT-file as a 16-bit
value, the characters appear in reversed order (IM
rather than
MI), the program reading the MAT-file must perform byte-swapping to interpret the data in the MAT-file correctly.</p>
			<p>
				<b>Performance vs. transparency:</b> Although widely recommended for reasons of transparency, XML-based formats are not used in practice for sharing large-scale scientific data in active communities.  Scientists and researchers need a reliable format for exchanging large datasets for use in
computational environments for scientific data analysis.  Important factors for choosing tools are ease of use, platform independence, device-independent plotting, graphical user interface.  Important factors for choosing formats include performance for loading and analysis.  In their 2011 paper, <a href="http://cdn.intechopen.com/pdfs-wm/21947.pdf">The Impact of the Data Archiving File Format on Scientific Computing and Performance of Image Processing Algorithms in MATLAB Using Large HDF5 and XML Multimodal and Hyperspectral Data Sets</a>, Kelly Bennett and James Robertson found that the HDF5 format (a binary format with many characteristics in common with a Level 5 MAT-File)
provided faster load and process times than
XML formats.  In most cases, the XML file is between 2.5 and 3 three
times as large as the comparable HDF5 file.  Using a benchmark set of analyses, they found the execution times for the HDF5 files were
significantly less than for the XML files onboth Linux and Windows. For their data, the mean time taken for the XML files was around 60% more than for HDF5, with the main contribution to this
difference being the large load time and the
preprocessing step required to convert an ASCII XML character string to a numeric array in
MATLAB.</p>
		</fdd:general>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf</link>
					<tag>MATLAB: MAT-File Format </tag>
					<comment>This document, which includes the specifications for Level 4 and Level 5 MAT-Files has been re-released regularly, in association with MATLAB software releases.  As of December 2015, the most recent significant release was in March 2008, with a minor revision in October 2014.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>https://en.wikipedia.org/wiki/MATLAB</link>
					<tag>Wikipedia entry for MATLAB</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/help/matlab/index.html</link>
					<tag>MATLAB Documentation</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/help/matlab/import_export/mat-file-versions.html</link>
					<tag>MAT-File Versions</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://stackoverflow.com/questions/3947549/what-is-the-difference-between-m-and-mat-files-in-matlab</link>
					<tag>Stack: Overflow: What is the difference between .m and .mat files in MATLAB</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://cdn.intechopen.com/pdfs-wm/21947.pdf</link>
					<tag>&quot;The Impact of the Data Archiving File Format on Scientific Computing and Performance of Image Processing Algorithms in MATLAB Using Large HDF5 and XML Multimodal and Hyperspectral Data Sets.&quot; 2011.  By 
Kelly Bennett and James Robertson</tag>
					<comment>Published in MATLAB - A Ubiquitous Tool for the Practical Engineer by InTech Open.  Reports on experiments demonstrating the performance advantage of HDF5 over an XML-based format for commonly used image processing functions.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/matlabcentral/answers/94570-why-does-my-mat-file-header-summary-include-the-matlab-5-0-mat-file-header-message-when-i-try-to</link>
					<tag>Why does my &apos;MAT-File Header Summary&apos; include the &apos;MATLAB 5.0 MAT-file&apos; header message when I try to save my data as a MAT file in &apos;-v7&apos; version in MATLAB 7.9 (R2009b)?</tag>
					<comment>Explanation of levels and versions for the MAT-File format.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://stackoverflow.com/questions/4950630/matlab-differences-between-mat-versions</link>
					<tag>MATLAB: Differences between .mat versions</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/matlabcentral/answers/97209-are-mat-file-version-7-3-files-not-compressed-by-default-in-matlab-7-5-r2007b</link>
					<tag>Are MAT-file version 7.3 files not compressed by default in MATLAB 7.5 (R2007b)?</tag>
					<comment>Indicates that different versions of MATLAB software have had different default behaviors on saving files.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlGroup>
					<fdd:intro>The compilers of this resource have found several blog posts that question the compatibility of MAT-File 7.3 with HDF5 (on which it is based) or the performance of MAT-File 7.3 in comparison with earlier versions.</fdd:intro>
					<fdd:urlList>
						<fdd:urlReference>
							<link>http://undocumentedmatlab.com/blog/improving-save-performance</link>
							<tag>Undocumented Matlab:  Improving save performance.  Blog post from May 2013</tag>
							<comment>States, &quot;Matlabâs 7.3 format is not a pure HDF5 file, but rather a HDF5 variant that uses an undocumented internal format.&quot;</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>http://mloss.org/community/blog/2009/nov/19/matlabtm-73-file-format-is-actually-hdf5-and-can-b/</link>
							<tag>Matlab(tm) 7.3 file format is actually hdf5 and can be read from other languages like python.  Blog post from November 2009.</tag>
							<comment>States, &quot; While at first glance it looks like another proprietary format - it seems to be in fact the Hierarchical Data Format version 5. ...  So you can do all sorts of neat things.&quot;  However a comment indicates, &quot;Unfortunately, v7.3 doesn&apos;t seem to support HDF5 compression yet or atleast so it seems. The .mat files stored in the 7.3 format are humongous compared to 7.0.&quot;</comment>
						</fdd:urlReference>
						<fdd:urlReference>
							<link>https://pythonhosted.org/hdf5storage/information.html</link>
							<tag>hdf5storage, Python utility for reading/writing HDF5 and MAT-File 7.3 files</tag>
							<comment>States, &quot;MAT files version 7.3 and later are HDF5 files with a different file extension (.mat) and a very specific set of meta-data and storage conventions.&quot;</comment>
						</fdd:urlReference>
					</fdd:urlList>
				</fdd:urlGroup>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://en.wikibooks.org/wiki/MATLAB_Programming</link>
					<tag>MATLAB Programming from WikiBooks</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
