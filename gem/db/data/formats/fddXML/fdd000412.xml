<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000412" titleName="Advanced Forensic Format Disk Image, AFF Version 1.0" shortName="AFF_1_0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-1.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>any</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>unitary</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:updates>
			<fdd:date>2015-09-23</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Preliminary</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>Advanced Forensic Format, version 1.0</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>AFF</fdd:keyword>
			<fdd:keyword>Disk image</fdd:keyword>
			<fdd:keyword>Forensic disk image</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>Extensible format for the storage of disk images with or without compression, together with related metadata that may be stored within disk images or separately.  <i>Forensic</i> disk images often play a role in law enforcement and legal investigations, and the embedded metadata provides facts for a chain of evidence or audit trail.</p>
			<p>AFF files are partitioned into two layers: the disk-representation layer and the data-storage layer. The disk-representation layer defines specific segment names that are used to represent all the information for a disk image. Each AFF segment consists of a segment name, a 32-bit "flag," and a data payload. The name and the data payload can be nearly 4 GB in extent, although the format creators report that typical segment names are less than 32 bytes with data payloads of less than 16 MB. The metadata segments hold information about the disk image and data segments, called "pages," that carry the imaged disk information.  Additional detail on segments is provided in the creators' published  <a href="http://cs.harvard.edu/malan/publications/aff.pdf">description</a>.</p>
			<p>The AFF data-storage layer stores segments in binary form (segments are stored sequentially in one or more files) or as XML data, larger in size but often easier to use with non-forensic tools. It is possible to store the disk image in a binary file and metadata as XML, although this introduces the risk that the two files might become separated. </p>
			<p>AFF data pages can be compressed with the open-source <a href="http://www.zlib.net">zlib</a> or they can be left uncompressed. (The <a href="https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm">Lempel–Ziv–Markov chain compression algorithm</a> [LZMA] is also supported, at least in versions later than AFF 1.0.)</p>
			<p>The format supports internal self-consistency checking, so that typical AFF tools can recover part of
an image even if other parts are corrupted or
otherwise lost.
 The format also provides for the certification of content authenticity with traditional
hash functions, e.g., MD5 and SHA-1, and advanced digital
signatures based on X.509(v)3 certificates. Certification features are intended to meet legal or law-enforcement evidentiary needs, but they also support preservation-related integrity checking. Hashes may be recorded for the entire image and for each individual data segment, stored in specially named segments.  Signatures are calculated on uncompressed data, thus permitting the signing of a disk image prior to compression without compromising the digital signatures. The provisions for internal self-consistency checking permit part of an image to be recovered even if other parts are corrupted or lost.</p>
			<p>Version 1.0 of the format appears to be associated with the first version of the AFFLIB library; the most recent version of AFF (version 3.0) is implemented in the <a href="https://github.com/sshock/AFFLIBv3">AFFLIBv3</a> library.  <a href="../contact_format.shtml">Comments welcome</a>
			</p>
		</fdd:description>
		<fdd:shortDescription>Extensible format for the storage of disk images with or without compression, together with related metadata.</fdd:shortDescription>
		<fdd:productionPhase>Typically used for data analysis and not part of a process to create new content. May be used to archive data.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>
				<fdd:comment>Compression via the zlib implementation of the DEFLATE algorithm, not described at this Web site.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>
				<fdd:comment>Compression via the Lempel–Ziv–Markov chain compression algorithm (LZMA), not described at this Web site.
				</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has later version</fdd:typeOfRelationship>
				<fdd:comment>The <a href="http://forensicswiki.org/wiki/AFF">Forensics Wiki</a> refers to version 2.0, which appears to be associated with the second version of the AFFLIB tool (AFFLIBv2). <a href="../contact_format.shtml">Comments welcome</a>
				</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has later version</fdd:typeOfRelationship>
				<fdd:comment>The <a href="http://forensicswiki.org/wiki/AFF">Forensics Wiki</a> refers to version 3.0, which appears to be associated with the third version of the AFFLIB tool (AFFLIBv3). <a href="../contact_format.shtml">Comments welcome</a>
				</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Other</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000413</fdd:id>
					<fdd:shortName>AFF4</fdd:shortName>
					<fdd:titleName>Advanced Forensic Framework Disk Image, AFF Version 4 (AFF4)</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Successor format to <a href="https://code.google.com/p/aff4/wiki/AFF4Design">AFF_1_0</a>, which has a significantly different structure.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>AFF was originally developed by Simson Garfinkel and Basis Technology, as an <a href="http://web.mit.edu/simsong/afflib/affdoc.doc">&quot;open format, free from any patent or license restriction.&quot;</a>
		</fdd:disclosure>
		<fdd:documentation>The compiler of this format description did not find an AFF specification in the formal sense (<a href="../contact_format.shtml">Comments welcome</a>).  However, a <a href="http://cs.harvard.edu/malan/publications/aff.pdf">chapter excerpted</a> from <i>Advances in Digital Forensics II</i> (2005) includes a very thorough description of the format, together with some information about the AFFLIB software tool to support its use. </fdd:documentation>
		<fdd:adoption>Some adoption by law enforcement and legal investigators. Some adoption in archives, supported by the inclusion of AFF capabilities in the popular <a href="http://www.bitcurator.net">BitCurator</a> and <a href="http://accessdata.com/product-download/digital-forensics/ftk-imager-version-3.2.0">FTK Imager</a> tools.</fdd:adoption>
		<fdd:licensingAndPatents>No license on the format.  Regarding the AFFLIB application, its implementation is distributed under a license that allows code to be freely integrated into other open-source and proprietary programs.  For a 2009 statement related to this, see the <a href="https://web.archive.org/web/20090223192925/http:/www.afflib.org/about.php">harvested page</a> at the Internet Archive.</fdd:licensingAndPatents>
		<fdd:transparency>Transparent wrapper; content within wrapper may require algorithms and tools to read, and/or require sophistication to build tools.</fdd:transparency>
		<fdd:selfDocumentation>Arbitrary metadata is formatted as user-defined name/value pairs. The compiler of this page did not find a core set of required metadata to embed; this may be determined by the tools selected to work with AFF files.  <a href="../contact_format.shtml">Comments welcome</a>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>None identified.</fdd:externalDependencies>
		<fdd:techProtection>
			<p>The developers state that AFF allows for forensic disk images to stored encrypted and decrypted on-the-fly for processing. <a href="../contact_format.shtml">Comments welcome</a>
			</p>
		</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>AFF</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From the <a href="http://filext.com/file-extension/AFF">File Extension Source. See Notes for comment on additional filename extensions in later versions.</a>
				</fdd:note>
			</fdd:filenameExtension>
			<fdd:magicNumbers>
				<fdd:sigValues>
					<fdd:sigValue>Hex: 41 46 46</fdd:sigValue>
					<fdd:sigValue>ASCII: AFF</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From the <a href="http://filext.com/file-extension/AFF">File Extension Source</a>. </fdd:note>
			</fdd:magicNumbers>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>Regarding overall structure and filename conventions in version 3 of AFF, the <a href="http://forensicswiki.org/wiki/AFF">Forensics Wiki</a> reports as follows: &quot;The original AFF format is a single file that contains segments with drive data and metadata. Its contents can be compressed, but it can be quite large as the data on modern hard disks often reach 100GB in size. AFFv3 supported three file extensions -- AFF, AFD and AFM -- and provided a tool to easily convert between the variations.  For ease of transfer, large AFF files can be broken into multiple AFD format files. The smaller AFD files can be readily moved around a FAT32 file system which limits files to 2GB or stored on DVDs, which have similar size restrictions. The AFM format stores the metadata in an AFF file, and the disk data in a separate raw file. This format allows analysis tools that support the raw format to access the data, but without losing the metadata.&quot;</fdd:general>
		<fdd:history>
			<p>AFF was originally developed by Simson Garfinkel and Basis Technology.  From the <a href="http://forensicswiki.org/wiki/AFF">Forensics wiki</a>: &quot;AFF was created [circa 2005-06] to be an open and extensible file format to store disk images and associated metadata. The goal was to create a disk imaging format that would not lock users into a proprietary format that may limit how he or she may analyze it. An open standard enables investigators to quickly and efficiently use their preferred tools to solve crimes, gather intelligence, and resolve security incidents. The format was implemented in AFFLIB which was distributed with an open source license. After AFFLIB was published, Joachim Metz published libewf, an open source implementation of the EnCase Expert Witness format. Later, Guidance Software modified its format to allow single disk volumes larger than 4GiB. Together these two changes significantly decreased the need for AFF and AFFLIB.&quot;</p>
			<p>The <a href="https://github.com/sshock/AFFLIBv3">GitHub</a> site for the AFFLIBv3 tool includes a ReadMe file about the creation and maintenance of the software library which is suggestive of the likely sequence for file format development: 2005-2006 Basis Technology, Inc.; 2005-2013 Simson L. Garfinkel; and 2014 Phillip Hellewell (sshock).</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://cs.harvard.edu/malan/publications/aff.pdf</link>
					<tag>Advanced Forensic Format: An Open, Extensible Format for Disk Imaging</tag>
					<comment>De facto specification, from a chapter in the 2005 book Advances in Digital Forensics II.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://web.mit.edu/simsong/afflib/affdoc.doc</link>
					<tag>The Advanced Forensic Format 1.0</tag>
					<comment>By Simson Garfinkel.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://forensicswiki.org/wiki/AFF</link>
					<tag>Forensics Wiki page on AFF</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://web.archive.org/web/20090223192925/http:/www.afflib.org/about.php</link>
					<tag>AFF About Us</tag>
					<comment>Harvested 2009 Web statement on AFF licensing.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://github.com/sshock/AFFLIBv3</link>
					<tag>GitHub site for the AFFLIBv3 tool</tag>
					<comment>Main page</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://github.com/sshock/AFFLIBv3/tree/master/doc</link>
					<tag>GitHub site for the AFFLIBv3 tool</tag>
					<comment>Documentation page</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://code.google.com/p/aff4/wiki/AFF4Design</link>
					<tag>Advanced Forensic Framework Disk Image, Version 4 (AFF4)</tag>
					<comment>About the &quot;next&quot; and different version of AFF.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.bitcurator.net</link>
					<tag>BitCurator Web site</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://accessdata.com/product-download/digital-forensics/ftk-imager-version-3.2.0</link>
					<tag>Download page for FTK Imager application</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.zlib.net</link>
					<tag>ZLIB compression algorithm Web site</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://en.wikipedia.org/wiki/Lempel-Ziv-Markov_chain_algorithm</link>
					<tag>Wikipedia article on LZMA compression algorithm</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
