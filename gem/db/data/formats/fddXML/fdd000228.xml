<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000228" titleName="HDF4, Hierarchical Data Format, Version 4 and earlier" shortName="HDF4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-1.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>dataset</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>file-format</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:gdfrConstraint>structured</fdd:gdfrConstraint>
		<fdd:gdfrBasis>symbolic</fdd:gdfrBasis>
		<fdd:updates>
			<fdd:date>2012-01-05</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Partial</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>HDF4, Hierarchical Data Format, Version 4 and earlier</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>numeric data formats</fdd:keyword>
			<fdd:keyword>scientific data formats</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>At its lowest level, HDF4 is a physical file format for storing scientific data. The data structure types that HDF4 supports are Scientific Data Sets, Raster Images (General, 8-bit, 24-bit APIs), color palettes, text entries, and Vdatas and Vgroups.</p>
			<ul>
				<li>Scientific Data Sets (SDSs) are used for storing multidimensional arrays (gridded data). The actual data in the dataset can be of any of the "standard" number types: 8, 16, and 32-bit signed and unsigned integers, and 32 and 64-bit floating point values. In addition, the SD interface allows SD data sets with variable bit lengths (1 to 32-bits) to be created.  Metadata such as dimension scales and attributes can also be stored with an SDS.</li>
				<li>Vgroups are generic grouping elements allowing a user to associate related objects within an HDF file. As Vgroups can contain other Vgroups, it is possible to build a hierarchical file. Vdatas are generic list objects. By combining Vdatas in Vgroups, it is possible to represent higher level data constructs: mesh data, multi-variate datasets, sparse matrices, finite-element data, spreadsheets, splines, non-Cartesian coordinate data, etc.</li>
			</ul>
			<p>At its highest level, HDF4 is a collection of utilities and applications for manipulating, viewing, and analyzing data in HDF4 files. Between these levels, HDF4 is a software library that provides high-level APIs and a low-level data interface.</p>
			<p>HDF4 was originally known simply as HDF.  When Version 5 was introduced, it was dubbed HDF5 to emphasize the fact that the new version was significantly different from HDF and not backwards-compatible.  Later, the HDF Group decided to adopt the name HDF4 for the earlier version to avoid confusion.  This website has followed the same approach.</p>
		</fdd:description>
		<fdd:shortDescription>A physical file format for storing scientific data. The data structure types that HDF4 supports are Scientific Data Sets, Raster Images (General, 8-bit, 24-bit APIs), color palettes, text entries, and Vdatas and Vgroups.</fdd:shortDescription>
		<fdd:productionPhase>Generally used for middle- and final-state archiving. </fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has subtype</fdd:typeOfRelationship>
				<fdd:comment>Includes version 4.x and previous releases not documented separately here.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Has modified version</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000297</fdd:id>
					<fdd:shortName>HDF-EOS</fdd:shortName>
					<fdd:titleName>Hierarchical Data Format-Earth Observing System (based on HDF4)</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Affinity to</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000229</fdd:id>
					<fdd:shortName>HDF5</fdd:shortName>
					<fdd:titleName>Hierarchical Data Format, Version 5</fdd:titleName>
				</fdd:relatedTo>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:localUse>
		<fdd:experience>None</fdd:experience>
		<fdd:preference>None</fdd:preference>
	</fdd:localUse>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>The HDF software was developed and supported by NCSA and is freely available.  In July 2005, NCSA announced that the "Hierarchical Data Format group is spinning off from the National Center for Supercomputing Applications (NCSA) as a non-profit corporation supporting open source software and non-proprietary data formats." <p>Source code for the HDF libraries is available in Fortran and C. Some tools are available as Java source.
</p>
		</fdd:disclosure>
		<fdd:documentation>Software can be downloaded from <a href="http://www.hdfgroup.org/products/hdf4/">http://www.hdfgroup.org/products/hdf4/</a>.  Documentation is at <a href="http://www.hdfgroup.org/release4/doc/index.html">http://www.hdfgroup.org/release4/doc/index.html</a>.</fdd:documentation>
		<fdd:adoption>
			<p>These freely available tools are used by an estimated 2 million users in fields from environmental science to the aerospace industry and by entities including the U.S. Department of Energy, NASA, and Boeing.  It is used world-wide in many fields, including Environmental Science, Neutron Scattering, Non-Destructive Testing, and Aerospace, to name a few. Scientific projects that use HDF include NASA's HDF-EOS project, and the DOE's Advanced Simulation and Computing Program.</p>
			<p>More users of HDF (HDF4 and HDF5) are listed at <a href="http://www.hdfgroup.org/users.html">Who Uses HDF?</a> from the HDF Group.</p>
			<p>An increasing number of software programs for data viewing and analysis can use files in HDF4 format.  See, for example, <a href="http://www.hdfgroup.org/tools.html">Software Using HDF (4)</a> from The HDF Group.  The OPenDAP project supports HDF4 data access through the <a href="http://opendap.org/HDF4_Handler">HDF4 handler</a> in its Hyrax software.  <a href="http://www.mathworks.com/help/matlab/ref/hdf4.html">Matlab</a> has routines to read HDF4  files, providing higher level functions than the native API.  <a href="http://www.gdal.org/frmt_hdf4.html">GDAL</a> has a driver to import HDF4 files.</p>
		</fdd:adoption>
		<fdd:licensingAndPatents>
			<p>No concerns for non-commercial use.</p>
			<p>One of the optional compression methods supported is Szip.  Since Release 2.0, the HDF4 software library is shipped including Szip compression software based on an algorithm developed at the Jet Propulsion Laboratory and patented by NASA.  A license to users of HDF software permits decompression using the integrated Szip code by all users and permits compression for non-commercial scientific use.  Commercial use of the Szip compression requires a separate license.  See <a href="http://www.hdfgroup.org/doc_resource/SZIP/Commercial_szip.html">Szip Copyright and License Statement, as Distributed in the HDF Source Code</a>.</p>
		</fdd:licensingAndPatents>
		<fdd:transparency>
			<p>The HDF4 format is designed to give scientists flexibility to store their data in a form and layout that supports high performance for the intended primary use of the data.  The resulting file cannot be interpreted without access to functional HDF4-aware software.  During 2011, prompted by a "desire to read HDF4 files without relying on HDF4 libraries," a pair of tools have been developed to produce a self-describing XML-based map of the data using a specified <i>HDFmap</i> XML schema and to read such a map.  See <a href="http://www.hdfgroup.org/projects/h4map/">HDF4 Mapping Project</a>.</p>
		</fdd:transparency>
		<fdd:selfDocumentation>
			<p>An HDF structure is self-describing, allowing an application built using the HDF4 software library to interpret the structure and contents of a file without any outside information. Supports user-defined attributes and annotations.</p>
		</fdd:selfDocumentation>
		<fdd:externalDependencies>None beyond access to HDF-aware software.</fdd:externalDependencies>
		<fdd:techProtection>None.</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:qualityAndFunctionalityFactors>
		<fdd:datasetQF>
			<fdd:normalDataset>
				<p>Numeric data in multidimensional arrays can be of any of the "standard" number types: 8, 16, and 32-bit signed and unsigned integers, and 32 and 64-bit floating point values.  Character (string) data of indefinite length is also supported.</p>
				<p>HDF4 supports multidimensional arrays and hierarchical groups of objects.  HDF4 incorporates general grouping structures that allow representation of many high-level data constructs, such as multivariate datasets, finite-element data, sparse matrices, and mesh data.</p>
			</fdd:normalDataset>
			<fdd:accessSoftware>
				<p>An integral component of HDF4 is a software library that provides an API (in Fortran and two flavors of the C Programming language) to read and write files in the HDF4 format.  The interface for multidimensional arrays (scientific datasets) is designed to be as compatible as possible with netCDF, an interface developed by the Unidata Program Center to manipulate multimensional arrays.</p>
			</fdd:accessSoftware>
			<fdd:dataDocumentation>HDF4 offers the capability to annotate a file as a whole or any individual dataset, using labels (short annotations) and descriptions (longer annotations).  There is no explicit support  in HDF4 for embedding structured metadata using a particular schema or syntax.  However, a particular community can use the annotation features in specified ways or package metadata in a consistent way and embed metadata packages as special HDF data objects.</fdd:dataDocumentation>
			<fdd:beyondDataset>
				<p>Multidimensional arrays can have one unlimited (appendable) dimension.</p>
				<p>In addition to support for numeric datasets, HDF4 has support for general raster images and associated color palettes.</p>
			</fdd:beyondDataset>
		</fdd:datasetQF>
	</fdd:qualityAndFunctionalityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:filenameExtension>
				<fdd:sigValues>
					<fdd:sigValue>hdf</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From <a href="http://filext.com/">The File Extension Source</a>.</fdd:note>
			</fdd:filenameExtension>
			<fdd:internetMediaType>
				<fdd:sigValues>
					<fdd:sigValue>application/x-hdf</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From <a href="http://filext.com/">The File Extension Source</a>.</fdd:note>
			</fdd:internetMediaType>
			<fdd:magicNumbers>
				<fdd:sigValues>
					<fdd:sigValue>Hex: 0E 03 13 01</fdd:sigValue>
				</fdd:sigValues>
				<fdd:note>From <a href="http://filext.com/">The File Extension Source</a>.</fdd:note>
			</fdd:magicNumbers>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>There are two HDF formats, HDF4 (4.x and previous releases) and HDF5. These formats are completely different and NOT compatible. As of January 2012, there are no plans to drop support of HDF4, but features will not be added.  New projects are encouraged to use HDF5.</p>
			<p>Some of the HDF4 limitations are: A single file cannot store more than 20,000 complex objects, and a single file cannot be larger than 2 gigabytes;  the data models are less consistent than they should be. There are more object types than necessary, and datatypes are too restricted; the library source code is old and overly complex, does not support parallel I/O effectively, and is difficult to use in threaded applications.</p>
		</fdd:general>
		<fdd:history>
			<p>The HDF Group [<a href="http://www.hdfgroup.org/">http://www.hdfgroup.org/</a>] was spun off from the National Center of Supercomputing Applications (NCSA) as a non-profit corporation in December 2004. The corporation, "The HDF Group" (THG), continues to support open source software and the non-proprietary HDF4 and HDF5 data formats.</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.hdfgroup.org/release4/doc/index.html</link>
					<tag>HDF4 documentation</tag>
					<comment>As of December 2014, the latest version of the HDF4 software library is Version 4.2.10, released in February 2014.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.hdfgroup.org/products/hdf4/</link>
					<tag>HDF4 Home Page</tag>
					<comment> Includes links for software downloads.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.hdfgroup.org/projects/h4map/</link>
					<tag>HDF4 Mapping Project</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>ftp://ftp.uni-duisburg.de/FlightGear/Devel/An_Introduction_to_Distributed_Visualization.pdf</link>
					<tag>An Introduction to Distributed Visualization</tag>
					<comment>By Jan Heijmans.  2002.  Section 4.2 compares HDF, HDF5, CDF, NetCDF</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.mathworks.com/help/matlab/hdf4.html</link>
					<tag>Matlab (Mathworks) help for reading HDF4 and HDF-EOS files</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.gdal.org/frmt_hdf4.html</link>
					<tag>GDAL driver for HDF4 --- Hierarchical Data Format Release 4 (HDF4)</tag>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
		<fdd:citations>
			<fdd:citation>
				<fdd:bookReference>
					<bookRefDetail rel="au">May, John M.</bookRefDetail>
					<bookRefDetail rel="btitle">Parallel I/O for High-Performance Computing</bookRefDetail>. San Francisco, CA.: Morgan Kaufmann, <bookRefDetail rel="date">2001</bookRefDetail>.  Section 6.1, Data Models, discusses netCDF (i.e. netCDF-3 Classic model), HDF (i.e. HDF4), and HDF5.</fdd:bookReference>
			</fdd:citation>
		</fdd:citations>
	</fdd:usefulReferences>
</fdd:FDD>
