<?xml version="1.0" encoding="UTF-8"?>
<fdd:FDD id="fdd000413" titleName="Advanced Forensic Framework Disk Image, AFF Version 4 (AFF4)" shortName="AFF_4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fdd="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1" xsi:schemaLocation="http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1 http://www.loc.gov/preservation/digital/formats/schemas/fdd/v1/fdd-v1-1.xsd">
	<fdd:properties>
		<fdd:gdfrGenreSelection>
			<fdd:gdfrGenre>any</fdd:gdfrGenre>
		</fdd:gdfrGenreSelection>
		<fdd:formatCategories>
			<fdd:category>family</fdd:category>
		</fdd:formatCategories>
		<fdd:gdfrComposition>container-bundle</fdd:gdfrComposition>
		<fdd:gdfrForm>binary</fdd:gdfrForm>
		<fdd:updates>
			<fdd:date>2015-12-09</fdd:date>
		</fdd:updates>
		<fdd:draftStatus>Partial</fdd:draftStatus>
	</fdd:properties>
	<fdd:identificationAndDescription>
		<fdd:fullName>Advanced Forensic Framework 4, AFF 4</fdd:fullName>
		<fdd:keywords>
			<fdd:keyword>AFF</fdd:keyword>
			<fdd:keyword>Disk image</fdd:keyword>
			<fdd:keyword>Forensic disk image</fdd:keyword>
			<fdd:keyword>AFF4</fdd:keyword>
		</fdd:keywords>
		<fdd:description>
			<p>Termed an object-oriented &quot;framework&quot; by its creators, AFF_4 is an abstract information model that permits disk-image data to be stored in one or more places while the information about the data is stored elsewhere.  Users of the framework typically gather data as evidence in legal or investigative activities, hence the use of the term <i>forensic</i>.  Unlike predecessor disk image formats, AFF_4 is not a &quot;file format&quot; and the specification does not establish a single wrapper that encapsulates the data.</p>
			<p>Image data is segmented as <i>chunks</i>, collected into what is called a <i>bevy</i> (see <a href="#notes">Notes</a>).  The chunks may be compressed with zlib.  Meanwhile, storage can be carried out using regular HTTP, as well as imaging directly to a central HTTP server using Web Distributed Authoring and Versioning (WebDAV), an extension of HTTP.  The overall data set is stored in <i>evidence volumes</i> that may be implemented as directory-based volumes (more or less, directories in a filesystem) or zip-64-based volumes (based on the ZIP64 extension of the <fddLink id="fdd000354">ZIP_PK</fddLink> format).  The corpus of data to be managed may be distributed and of great extent: the <a href="http://forensicswiki.org/wiki/AFF4">Forensic Wiki</a> states that &quot;AFF4 is designed to be scalable to huge evidence corpuses [and thus] the AFF4 universe is infinite.&quot;</p>
			<p>Objects in the AFF_4 framework are addressable using RDF instances that minimally carry a unique URN for the object, defined in the aff4 namespace, and that may also carry information about object attributes.</p>
			<p>The developers state that AFF_4 surpasses its predecessors in terms of how the data it contains can be examined for forensic purposes.  For example, the element referred to as a <i>map stream</i> connects the values for byte offsets in the image to offsets in a file that has been imaged and, in turn, to the target object.  This mapping supports such actions as <a href="http://forensicswiki.org/wiki/File_Carving">&quot;carving&quot; (searching for files or other kinds of objects based on content rather than metadata)</a> without the need to store the multiple (and often extensive) copies of data chunks as required when carving other disk-image formats.</p>
			<p>Signifiers like filename extensions, media types, or magic numbers may exist for AFF_4&apos;s component elements but not at the level of this information model.</p>
		</fdd:description>
		<fdd:shortDescription>An object-oriented &quot;framework&quot; that manages disk-image data, typically gathered as evidence in legal or investigative activities.</fdd:shortDescription>
		<fdd:productionPhase>Typically used for data analysis and not part of a process to create new content. May be used to archive data.</fdd:productionPhase>
		<fdd:relationships>
			<fdd:relationship>
				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>
				<fdd:comment>AFF4 Volume ZipFile, not described at this Web site.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>
				<fdd:comment>Compression via the zlib implementation of the DEFLATE algorithm, not described at this Web site.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>May contain</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000354</fdd:id>
					<fdd:shortName>ZIP_PK</fdd:shortName>
					<fdd:titleName>ZIP File Format (PKWARE)</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>Use of ZIP_PK includes the ZIP64 extension.</fdd:comment>
			</fdd:relationship>
			<fdd:relationship>
				<fdd:typeOfRelationship>Other</fdd:typeOfRelationship>
				<fdd:relatedTo>
					<fdd:id>fdd000412</fdd:id>
					<fdd:shortName>AFF_1_0</fdd:shortName>
					<fdd:titleName>Advanced Forensic Format Disk Image, AFF Version 1.0</fdd:titleName>
				</fdd:relatedTo>
				<fdd:comment>AFF_4 was preceded by this format, which has a significantly different structure.</fdd:comment>
			</fdd:relationship>
		</fdd:relationships>
	</fdd:identificationAndDescription>
	<fdd:sustainabilityFactors>
		<fdd:disclosure>Open source format developed by Michael Cohen, Simson Garfinkel, and Bradley Schatz.</fdd:disclosure>
		<fdd:documentation>Until March 2017, the most thorough description of the format was at the <a href="http://www.aff4.org/docs/Overview/Introduction.html">aff4.org Web site</a>.  In March 2017, a more formal specification for AFF4 was released at <a href="https://github.com/aff4/Standard">https://github.com/aff4/Standard</a>. The compilers of this resource have been unable to determine whether the 2017 specification is for a significantly extended format. <a href="https://www.loc.gov/preservation/digital/formats/contact_format.shtml">Comments welcome</a>.</fdd:documentation>
		<fdd:adoption>Two software libraries for zip-based implementations have been identified: <a href="https://pypi.python.org/pypi/PyAFF4">Python Advanced Forensic Format Version 4 library</a> and <a href="http://rekall-forensic.blogspot.ch/2015/04/the-pmem-memory-acquisition-suite.html">Rekall PMEM</a>. Adoption expected to be by law enforcement and legal investigators rather than by memory institution archives; <a href="../contact_format.shtml">Comments welcome</a>.
</fdd:adoption>
		<fdd:licensingAndPatents>None identified.</fdd:licensingAndPatents>
		<fdd:transparency>Transparent wrapper; content within wrapper may require algorithms and tools to read, and/or require sophistication to build tools.</fdd:transparency>
		<fdd:selfDocumentation>AFF4 self-documentation pertains to the structure of the data, e.g., compression type, size, and storage location.  Segments of disk-imaged content are called AFF4 Objects, and these have unique names in the form of URNs, often based on a GUID.  AFF4 uses RDF to model statements about objects as the tuple of subject, predicate, and value. In the ZipFile implementation, the RDF is in the ZIP archive in a file called <a href="http://www.w3.org/TR/turtle">information.turtle</a> that uses a particular syntax for the RDF.
		</fdd:selfDocumentation>
		<fdd:externalDependencies>None identified.</fdd:externalDependencies>
		<fdd:techProtection>
			<p>The <a href="http://www.forensicswiki.org/wiki/Category:Forensics_File_Formats">Forensics Wiki</a> states that AFF4 supports cryptography and image signing.  The implications are not clear to the compiler of this description; <a href="../contact_format.shtml">Comments welcome</a>. </p>
		</fdd:techProtection>
	</fdd:sustainabilityFactors>
	<fdd:fileTypeSignifiers>
		<fdd:signifiersGroup>
			<fdd:other>
				<fdd:tag>Pronom PUID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>See notes</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>Pronom&apos;s PUID fmt/844 covers AFF but does not include version information</fdd:note>
				</fdd:values>
			</fdd:other>
			<fdd:other>
				<fdd:tag>Wikidata Title ID</fdd:tag>
				<fdd:values>
					<fdd:sigValues>
						<fdd:sigValue>Q27473543</fdd:sigValue>
					</fdd:sigValues>
					<fdd:note>See <a href="https://www.wikidata.org/wiki/Q27473543">https://www.wikidata.org/wiki/Q27473543</a>.
					</fdd:note>
				</fdd:values>
			</fdd:other>
		</fdd:signifiersGroup>
	</fdd:fileTypeSignifiers>
	<fdd:notes>
		<fdd:general>
			<p>The number "4" assigned to the format&apos;s name is not a version indicator in the conventional sense.  <fddLink id="fdd000412">AFF_1_0</fddLink> (Advanced Forensic Format; the second <i>F</i> stands for <i>format</i>), AFF_4&apos;s predecessor, was associated with three versions of a software tool, the most recent of which is <a href="https://github.com/sshock/AFFLIBv3">AFFLIBv3</a>.  The software version numbers seem to have been used to refer to instances of the format by those who implemented it. Thus it appears that the "4" in Advanced Forensic <i>Framework</i> (the second <i>F</i> stands for <i>framework</i>) was intended to eliminate any chance of confusion with the predecessor.</p>
			<p>Information from the AFF4 <a href="http://www.aff4.org/docs/Overview/Introduction.html">Web site</a> explains chunks, bevys (bevies?), and bevy indexes: &quot;The image data is divided in chunks. Each chunk is compressed separately. A number of chunks are collected into a single segment termed a bevy. Each bevy also has another segment called the bevy index which contains the start offset of each compressed chunk inside the bevy. The bevy URN is derived from the AFF4 Image URN by appending an 8 digit decimal, zero padded bevy id (an incrementing integer started from 0). Each bevy’s index has a URN which is created by appending “/index” to the bevy’s URN.&quot;</p>
			<p>The creators of the format use the term <i>resolver</i> to name the component that stores the RDF metadata and manages the content in the <a href="http://www.aff4.org/docs/Overview/Introduction.html">AFF4 information model.</a>  In this context, the term is implementation-dependent and does not refer to a global resolution system; see for example the article <a href="http://www.sciencedirect.com/science/article/pii/S1742287615000171">A scalable file based data store for forensic analysis</a>.</p>
			<p>A 2010 article in <i>Digital Investigation 7</i> highlights the virtues of reducing the need for data storage as forensic analyses are carried out, as well as highlighting the hash-based compression scheme that the authors used as an extension to the AFF4 format: &quot;As disk capacity
growth continues to outpace storage IO bandwidth, the demands placed on storage and
time are ever increasing. Data reduction and de-duplication technologies are now
commonplace in the Enterprise space, and are potentially applicable to forensic acquisition.
Using the new AFF4 forensic file format we employ a hash based compression scheme
to leverage an existing corpus of images, reducing both acquisition time and storage
requirements.&quot;</p>
		</fdd:general>
		<fdd:history>
			<p>The development of AFF_4, completed in 2009, was the work of Michael Cohen, Simson Garfinkel, and Bradley Schatz, and originally designed and published in “Extending the advanced forensic format to accommodate multiple data sources, logical evidence, arbitrary information and forensic workflow,” <i>Digital Investigation 6</i> (2009) S57–S68.  This paper was released with an early implementation written in python; the later version available at aff4.org is an open source re-implementation for a general purpose AFF4 library.</p>
			<p>The development context is outlined in a 2010 article in <i>Digital Investigation 7</i> titled &quot;Hash based disk imaging using AFF4&quot;: &quot;Traditional imaging technologies consist of making bit for bit copies of all data stored on the acquired media (so called raw or &#39;dd&#39; images). Second generation imaging techniques improved space efficiency by introducing block based compression to the data stream  . . . .  Although space requirements for image storage was reduced, this came at the cost of increased acquisition time.  The advanced forensics file format (AFF4) is a third generation forensic file format integrating multiple image streams, the expression of arbitrary information and storage virtualisation into the forensic file format itself.&quot;</p>
		</fdd:history>
	</fdd:notes>
	<fdd:formatSpecifications>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.aff4.org/docs/Overview/Introduction.html</link>
					<tag>AFF4 Introduction and basic concepts</tag>
					<comment>Opening page for a web site that offers a de facto specification.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://github.com/aff4/Standard</link>
					<tag>AFF4 Standard Documents</tag>
					<comment>More formal standards documentation including 2017 specification</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:formatSpecifications>
	<fdd:usefulReferences>
		<fdd:urls>
			<fdd:url>
				<fdd:urlReference>
					<link>http://forensicswiki.org/wiki/AFF4</link>
					<tag>Advanced Forensic Framework 4 (AFF4)</tag>
					<comment>Forensics Wiki page on AFF4.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://forensicswiki.org/wiki/File_Carving</link>
					<tag>File Carving</tag>
					<comment>Forensics Wiki page on file carving.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.forensicswiki.org/wiki/Category:Forensics_File_Formats</link>
					<tag>Forensics File Formats</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://tools.ietf.org/html/rfc1950</link>
					<tag>ZLIB Compressed Data Format Specification version 3.3</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://tools.ietf.org/html/rfc1951</link>
					<tag>DEFLATE Compressed Data Format Specification version 1.3</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://dfrws.org/conferences/dfrws-usa-2009/sessions/extending-advanced-forensic-format-accommodate-multiple-data</link>
					<tag>Extending the advanced forensic format to accommodate multiple data sources . . .</tag>
					<comment>Article by Michael Cohen, Simson Garfinkel, and Bradley Schatz in Digital Investigations 6 (2009), pp. S57-S68; doi:10.1016/diin.2009.06.010</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://dfrws.org/conferences/dfrws-usa-2015/sessions/wirespeed-extending-aff4-container-format-scalable-acquisition</link>
					<tag>Extending The AFF4 Container Format For Scalable Acquisition And Live Analysis</tag>
					<comment>Article by Bradley Schatz in Digital Investigations 14 (2015). doi:10.1016/j.diin.2015.05.016 </comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://dfrws.org/conferences/dfrws-usa-2010/sessions/hash-based-disk-imaging-using-aff4</link>
					<tag>Hash-based disk imaging using AFF4</tag>
					<comment>Article by Michael Cohen and Bradley Schatz in Digital Investigations 7 (2010), doi:10.1016/diin.2010.05.015.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.zlib.net</link>
					<tag>ZLIB compression algorithm Web site</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.w3.org/TR/turtle</link>
					<tag>RDF 1.1: Turtle
Terse RDF Triple Language</tag>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://pypi.python.org/pypi/PyAFF4</link>
					<tag>Python Advanced Forensic Format Version 4 library</tag>
					<comment>Software library for AFF_4.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://rekall-forensic.blogspot.ch/2015/04/the-pmem-memory-acquisition-suite.html</link>
					<tag>Rekall PMEM</tag>
					<comment>Software library for AFF_4.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.sciencedirect.com/science/article/pii/S1742287615000171</link>
					<tag>A scalable file based data store for forensic analysis</tag>
					<comment>Article by Flavio Cruza, Andreas Moserb, and Michael Cohen in Digital Investigation 12 (2015), doi:10.1016/j.diin.2015.01.016.</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>http://www.nationalarchives.gov.uk/pronom/fmt/844</link>
					<tag>PRONOM entry for fmt/844</tag>
					<comment>Information in PRONOM from UK National Archives about Advanced Forensic Format. PUID: fmt/844. No version information declared..</comment>
				</fdd:urlReference>
			</fdd:url>
			<fdd:url>
				<fdd:urlReference>
					<link>https://www.wikidata.org/wiki/Q27473543</link>
					<tag>WikiData entry for Q27473543</tag>
					<comment>Information in WikiData about AFF, version 4. WikiData Title ID: Q27473543.</comment>
				</fdd:urlReference>
			</fdd:url>
		</fdd:urls>
	</fdd:usefulReferences>
</fdd:FDD>
